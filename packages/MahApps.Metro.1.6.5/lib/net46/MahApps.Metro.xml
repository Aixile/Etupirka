<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MahApps.Metro</name>
    </assembly>
    <members>
        <member name="T:MahApps.Metro.Actions.CommandTriggerAction">
            <summary>
            This CommandTriggerAction can be used to bind any event on any FrameworkElement to an <see cref="T:System.Windows.Input.ICommand" />.
            This trigger can only be attached to a FrameworkElement or a class deriving from FrameworkElement.
            
            This class is inspired from Laurent Bugnion and his EventToCommand.
            <web>http://www.mvvmlight.net</web>
            <license> See license.txt in this solution or http://www.galasoft.ch/license_MIT.txt </license>
            </summary>
        </member>
        <member name="F:MahApps.Metro.Actions.CommandTriggerAction.CommandProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Actions.CommandTriggerAction.Command" /> dependency property
            </summary>
        </member>
        <member name="P:MahApps.Metro.Actions.CommandTriggerAction.Command">
            <summary>
            Gets or sets the command that this trigger is bound to.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Actions.CommandTriggerAction.CommandParameterProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Actions.CommandTriggerAction.CommandParameter" /> dependency property
            </summary>
        </member>
        <member name="P:MahApps.Metro.Actions.CommandTriggerAction.CommandParameter">
            <summary>
            Gets or sets an object that will be passed to the <see cref="P:MahApps.Metro.Actions.CommandTriggerAction.Command" /> attached to this trigger.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.GlowWindowBehavior.Update">
            <summary>
            Updates all glow windows (visible, hidden, collapsed)
            </summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.GlowWindowBehavior.SetOpacityTo(System.Double)">
            <summary>
            Sets the opacity to all glow windows
            </summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.GlowWindowBehavior.StartOpacityStoryboard">
            <summary>
            Starts the opacity storyboard 0 -> 1
            </summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.GlowWindowBehavior.Show">
            <summary>
            Shows all glow windows
            </summary>
        </member>
        <member name="F:MahApps.Metro.Behaviours.PasswordBoxBindingBehavior.PasswordProperty">
            <summary>
                Gets or sets the bindable Password property on the PasswordBox control. This is a dependency property.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.PasswordBoxBindingBehavior.OnPasswordPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
                Handles changes to the 'Password' attached property.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.PasswordBoxBindingBehavior.PasswordBoxPasswordChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
                Handle the 'PasswordChanged'-event on the PasswordBox
            </summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.PasswordBoxBindingBehavior.OnAttached">
            <summary>
                Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>
                Override this to hook up functionality to the AssociatedObject.
            </remarks>
        </member>
        <member name="M:MahApps.Metro.Behaviours.PasswordBoxBindingBehavior.OnDetaching">
            <summary>
                Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>
                Override this to unhook functionality from the AssociatedObject.
            </remarks>
        </member>
        <member name="T:MahApps.Metro.Behaviours.TabControlSelectFirstVisibleTabBehavior">
            <summary>
            <para>
                Sets the first TabItem with Visibility="<see cref="F:System.Windows.Visibility.Visible"/>" as
                the SelectedItem of the TabControl.
            </para>
            <para>
                If there is no visible TabItem, null is set as the SelectedItem
            </para>
            </summary>
        </member>
        <member name="M:MahApps.Metro.Behaviours.WindowsSettingBehaviour.OnAttached">
            <inheritdoc />
        </member>
        <member name="M:MahApps.Metro.Behaviours.WindowsSettingBehaviour.OnDetaching">
            <inheritdoc />
        </member>
        <member name="T:MahApps.Metro.Controls.ClipBorder">
            <summary>
            Represents a border whose contents are clipped within the bounds
            of the border. The border may have rounded corners.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ClipBorder.BorderThicknessProperty">
            <summary>
            BorderThickness Dependency Property
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ClipBorder.BorderThickness">
            <summary>
            Gets or sets the BorderThickness property. This dependency property 
            indicates the BorderThickness.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ClipBorder.OnValidateThickness(System.Object)">
            <summary>
            Checks if the given Thickness is valid or not
            </summary>
            <param name="value">Thickness</param>
            <returns></returns>
        </member>
        <member name="F:MahApps.Metro.Controls.ClipBorder.PaddingProperty">
            <summary>
            Padding Dependency Property
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ClipBorder.Padding">
            <summary>
            Gets or sets the Padding property. This dependency property 
            indicates the Padding.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ClipBorder.CornerRadiusProperty">
            <summary>
            CornerRadius Dependency Property
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ClipBorder.CornerRadius">
            <summary>
            Gets or sets the CornerRadius property. This dependency property 
            indicates the CornerRadius of the border.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ClipBorder.OnValidateCornerRadius(System.Object)">
            <summary>
            Checks if the given CornerRadius is valid or not
            </summary>
            <param name="value">CornerRadius</param>
            <returns></returns>
        </member>
        <member name="F:MahApps.Metro.Controls.ClipBorder.BorderBrushProperty">
            <summary>
            BorderBrush Dependency Property
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ClipBorder.BorderBrush">
            <summary>
            Gets or sets the BorderBrush property. This dependency property 
            indicates the BorderBrush with which the Border is drawn.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ClipBorder.BackgroundProperty">
            <summary>
            Background Dependency Property
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ClipBorder.Background">
            <summary>
            Gets or sets the Background property. This dependency property 
            indicates the Background with which the Background is drawn.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ClipBorder.OptimizeClipRenderingProperty">
            <summary>
            OptimizeClipRendering Dependency Property
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ClipBorder.OptimizeClipRendering">
            <summary>
            Gets or sets the OptimizeClipRendering property. This dependency property 
            indicates whether the rendering of the clip should be optimized. When set to true,
            In order to optimize the rendering of the clipped Child,
            the background is rendered with the same brush as the border. Any other brush set for
            the background will be ignored. The Child will be rendered on top of it. 
            This is done to prevent any gaps between the border the the clipped Child (this is 
            evidently visible if both the Border and the Child are of same color).
            This works best when the Child does not have any level of transparency and is opaque.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ClipBorder.MeasureOverride(System.Windows.Size)">
            <summary>
            Updates DesiredSize of the ClipBorder.  Called by parent UIElement.  This is the first pass of layout.
            </summary>
            <remarks>
            Border determines its desired size it needs from the specified border the child: its sizing
            properties, margin, and requested size.
            </remarks>
            <param name="constraint">Constraint size is an "upper limit" that the return value should not exceed.</param>
            <returns>The Decorator's desired size.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.ClipBorder.ArrangeOverride(System.Windows.Size)">
            <summary>
            ClipBorder computes the position of its single child and applies its child's alignments to the child.
            
            </summary>
            <param name="finalSize">The size reserved for this element by the parent</param>
            <returns>The actual ink area of the element, typically the same as finalSize</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.ClipBorder.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Here the ClipBorder's Child, Border and Background are rendered.
            </summary>
            <param name="dc">Drawing Context</param>
        </member>
        <member name="M:MahApps.Metro.Controls.ClipBorder.GenerateGeometry(System.Windows.Media.StreamGeometryContext,System.Windows.Rect,MahApps.Metro.Controls.ClipBorder.BorderInfo)">
            <summary>
                Generates a StreamGeometry.
            </summary>
            <param name="ctx">An already opened StreamGeometryContext.</param>
            <param name="rect">Rectangle for geomentry conversion.</param>
            <param name="borderInfo">The core points of the border which needs to be used to create
            the geometry</param>
            <returns>Result geometry.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.ClipBorder.BorderInfo.#ctor(System.Windows.CornerRadius,System.Windows.Thickness,System.Windows.Thickness,System.Boolean)">
            <summary>
            Encapsulates the details of each of the core points of the border which is calculated
            based on the given CornerRadius, BorderThickness, Padding and a flag to indicate whether
            the inner or outer border is to be calculated.
            </summary>
            <param name="corners">CornerRadius</param>
            <param name="borders">BorderThickness</param>
            <param name="padding">Padding</param>
            <param name="isOuterBorder">Flag to indicate whether outer or inner border needs 
            to be calculated</param>
        </member>
        <member name="T:MahApps.Metro.Controls.Utils">
            <summary>
            A few very useful extension methods
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsCloseTo(System.Double,System.Double)">
            <summary>
            Returns whether or not two doubles are "close". 
            </summary>
            <param name="value1"> The first double to compare. </param>
            <param name="value2"> The second double to compare. </param>
            <returns>
            bool - the result of the AreClose comparision.
            </returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsLessThan(System.Double,System.Double)">
            <summary>
            Returns whether or not the first double is less than the second double.
            </summary>
            <param name="value1"> The first double to compare. </param>
            <param name="value2"> The second double to compare. </param>
            <returns>
            bool - the result of the LessThan comparision.
            </returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsGreaterThan(System.Double,System.Double)">
            <summary>
            Returns whether or not the first double is greater than the second double.
            </summary>
            <param name="value1"> The first double to compare. </param>
            <param name="value2"> The second double to compare. </param>
            <returns>
            bool - the result of the GreaterThan comparision.
            </returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsOne(System.Double)">
            <summary>
            Returns whether or not the double is "close" to 1.  Same as AreClose(double, 1),
            but this is faster.
            </summary>
            <param name="value"> The double to compare to 1. </param>
            <returns>
            bool - the result of the AreClose comparision.
            </returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsZero(System.Double)">
            <summary>
            IsZero - Returns whether or not the double is "close" to 0.  Same as AreClose(double, 0),
            but this is faster.
            </summary>
            <param name="value"> The double to compare to 0. </param>
            <returns>
            bool - the result of the AreClose comparision.
            </returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsCloseTo(System.Windows.Point,System.Windows.Point)">
            <summary>
            Compares two points for fuzzy equality.  This function
            helps compensate for the fact that double values can 
            acquire error when operated upon
            </summary>
            <param name='point1'>The first point to compare</param>
            <param name='point2'>The second point to compare</param>
            <returns>Whether or not the two points are equal</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsCloseTo(System.Windows.Size,System.Windows.Size)">
            <summary>
            Compares two Size instances for fuzzy equality.  This function
            helps compensate for the fact that double values can 
            acquire error when operated upon
            </summary>
            <param name='size1'>The first size to compare</param>
            <param name='size2'>The second size to compare</param>
            <returns>Whether or not the two Size instances are equal</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsCloseTo(System.Windows.Vector,System.Windows.Vector)">
            <summary>
            Compares two Vector instances for fuzzy equality.  This function
            helps compensate for the fact that double values can 
            acquire error when operated upon
            </summary>
            <param name='vector1'>The first Vector to compare</param>
            <param name='vector2'>The second Vector to compare</param>
            <returns>Whether or not the two Vector instances are equal</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsCloseTo(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Compares two rectangles for fuzzy equality.  This function
            helps compensate for the fact that double values can 
            acquire error when operated upon
            </summary>
            <param name='rect1'>The first rectangle to compare</param>
            <param name='rect2'>The second rectangle to compare</param>
            <returns>Whether or not the two rectangles are equal</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsNaN(System.Double)">
            <summary>
            Faster check for NaN ( faster than double.IsNaN() )
            IEEE 754 : If the argument is any value in the range 0x7ff0000000000001L through 0x7fffffffffffffffL 
            or in the range 0xfff0000000000001L through 0xffffffffffffffffL, the result will be NaN.
            </summary>
            <param name="value">Value to check</param>
            <returns></returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.RoundLayoutValue(System.Double,System.Double)">
            <summary>
            Rounds the given value based on the DPI scale
            </summary>
            <param name="value">Value to round</param>
            <param name="dpiScale">DPI Scale</param>
            <returns></returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsValid(System.Windows.Thickness,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Verifies if this Thickness contains only valid values
            The set of validity checks is passed as parameters.
            </summary>
            <param name='thick'>Thickness value</param>
            <param name='allowNegative'>allows negative values</param>
            <param name='allowNaN'>allows Double.NaN</param>
            <param name='allowPositiveInfinity'>allows Double.PositiveInfinity</param>
            <param name='allowNegativeInfinity'>allows Double.NegativeInfinity</param>
            <returns>Whether or not the thickness complies to the range specified</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.CollapseThickness(System.Windows.Thickness)">
            <summary>
            Method to add up the left and right size as width, as well as the top and bottom size as height
            </summary>
            <param name="thick">Thickness</param>
            <returns>Size</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsZero(System.Windows.Thickness)">
            <summary>
            Verifies if the Thickness contains only zero values
            </summary>
            <param name="thick">Thickness</param>
            <returns>Size</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsUniform(System.Windows.Thickness)">
            <summary>
            Verifies if all the values in Thickness are same
            </summary>
            <param name="thick">Thickness</param>
            <returns>true if yes, otherwise false</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsValid(System.Windows.CornerRadius,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Verifies if this CornerRadius contains only valid values
            The set of validity checks is passed as parameters.
            </summary>
            <param name='corner'>CornerRadius value</param>
            <param name='allowNegative'>allows negative values</param>
            <param name='allowNaN'>allows Double.NaN</param>
            <param name='allowPositiveInfinity'>allows Double.PositiveInfinity</param>
            <param name='allowNegativeInfinity'>allows Double.NegativeInfinity</param>
            <returns>Whether or not the CornerRadius complies to the range specified</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsZero(System.Windows.CornerRadius)">
            <summary>
            Verifies if the CornerRadius contains only zero values
            </summary>
            <param name="corner">CornerRadius</param>
            <returns>Size</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsUniform(System.Windows.CornerRadius)">
            <summary>
            Verifies if the CornerRadius contains same values
            </summary>
            <param name="corner">CornerRadius</param>
            <returns>true if yes, otherwise false</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.Deflate(System.Windows.Rect,System.Windows.Thickness)">
            <summary>
            Deflates rectangle by given thickness
            </summary>
            <param name="rect">Rectangle</param>
            <param name="thick">Thickness</param>
            <returns>Deflated Rectangle</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.Inflate(System.Windows.Rect,System.Windows.Thickness)">
            <summary>
            Inflates rectangle by given thickness
            </summary>
            <param name="rect">Rectangle</param>
            <param name="thick">Thickness</param>
            <returns>Inflated Rectangle</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsOpaqueSolidColorBrush(System.Windows.Media.Brush)">
            <summary>
            Verifies if the given brush is a SolidColorBrush and
            its color does not include transparency.
            </summary>
            <param name="brush">Brush</param>
            <returns>true if yes, otherwise false</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Utils.IsEqualTo(System.Windows.Media.Brush,System.Windows.Media.Brush)">
            <summary>
            Verifies if the given brush is the same as the otherBrush.
            </summary>
            <param name="brush">Brush</param>
            <param name="otherBrush">Brush</param>
            <returns>true if yes, otherwise false</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.CloseCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.CloseCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="F:MahApps.Metro.Controls.ContentControlEx.ContentCharacterCasingProperty">
            <summary>
            The DependencyProperty for the CharacterCasing property.
            Controls whether or not content is converted to upper or lower case
            Default Value: CharacterCasing.Normal
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ContentControlEx.ContentCharacterCasing">
            <summary> 
            Character casing of the Content
            </summary> 
        </member>
        <member name="F:MahApps.Metro.Controls.ContentControlEx.RecognizesAccessKeyProperty">
            <summary>
            The DependencyProperty for the RecognizesAccessKey property. 
            Default Value: false 
            </summary> 
        </member>
        <member name="P:MahApps.Metro.Controls.ContentControlEx.RecognizesAccessKey">
            <summary> 
            Determine if the inner ContentPresenter should use AccessText in its style
            </summary> 
        </member>
        <member name="T:MahApps.Metro.Controls.CustomValidationPopup">
            <summary>
            This custom popup is used by the validation error template.
            It provides some additional nice features:
                - repositioning if host-window size or location changed
                - repositioning if host-window gets maximized and vice versa
                - it's only topmost if the host-window is activated
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.CustomValidationPopup.CloseOnMouseLeftButtonDown">
            <summary>
            Gets/sets if the popup can be closed by left mouse button down.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridNumericUpDownColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
            <summary>
                Called when a cell has just switched to edit mode. 
            </summary>
            <param name="editingElement">A reference to element returned by GenerateEditingElement.</param> 
            <param name="editingEventArgs">The event args of the input event that caused the cell to go into edit mode. May be null.</param> 
            <returns>The unedited value of the cell.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridNumericUpDownColumn.SyncColumnProperty(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.DependencyProperty)">
            <summary>
            Synchronizes the column property. Taken from Helper code for DataGrid.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridNumericUpDownColumn.IsDefaultValue(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Taken from Helper code for DataGrid.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.StringFormatProperty">
            <summary>
            The DependencyProperty for the StringFormat property. 
            </summary> 
        </member>
        <member name="P:MahApps.Metro.Controls.DataGridNumericUpDownColumn.StringFormat">
            <summary>
            Gets or sets the formatting for the displaying value.
            </summary>
            <remarks>
            <see href="http://msdn.microsoft.com/en-us/library/dwhawy9k.aspx"></see>
            </remarks>
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.MinimumProperty">
            <summary>
            The DependencyProperty for the Minimum property. 
            </summary> 
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.MaximumProperty">
            <summary>
            The DependencyProperty for the Maximum property. 
            </summary> 
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.IntervalProperty">
            <summary>
            The DependencyProperty for the Interval property. 
            </summary> 
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.HideUpDownButtonsProperty">
            <summary>
            The DependencyProperty for the HideUpDownButtons property. 
            </summary> 
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.UpDownButtonsWidthProperty">
            <summary>
            The DependencyProperty for the UpDownButtonsWidth property. 
            </summary> 
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontFamilyProperty">
            <summary>
            The DependencyProperty for the FontFamily property. 
            Default Value: SystemFonts.MessageFontFamily
            </summary> 
        </member>
        <member name="P:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontFamily">
            <summary> 
            The font family of the desired font. 
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontSizeProperty">
            <summary>
            The DependencyProperty for the FontSize property. 
            Default Value: SystemFonts.MessageFontSize
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontSize">
            <summary> 
            The size of the desired font.
            </summary> 
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontStyleProperty">
            <summary> 
            The DependencyProperty for the FontStyle property.
            Default Value: SystemFonts.MessageFontStyle 
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontStyle">
            <summary>
            The style of the desired font. 
            </summary> 
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontWeightProperty">
            <summary> 
            The DependencyProperty for the FontWeight property.
            Default Value: SystemFonts.MessageFontWeight
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DataGridNumericUpDownColumn.FontWeight">
            <summary>
            The weight or thickness of the desired font. 
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.DataGridNumericUpDownColumn.ForegroundProperty">
            <summary>
            The DependencyProperty for the Foreground property.
            Default Value: SystemColors.ControlTextBrush 
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DataGridNumericUpDownColumn.Foreground">
            <summary>
            An brush that describes the foreground color. This overrides the cell foreground inherited color.
            </summary> 
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridNumericUpDownColumn.NotifyPropertyChangeForRefreshContent(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Method used as property changed callback for properties which need RefreshCellContent to be called
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridNumericUpDownColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
            <summary>
            Rebuilds the contents of a cell in the column in response to a binding change.
            </summary>
            <param name="element">The cell to update.</param>
            <param name="propertyName">The name of the column property that has changed.</param>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.BaseMetroDialog">
             <summary>
             The base class for dialogs.
            
             You probably don't want to use this class, if you want to add arbitrary content to your dialog,
             use the <see cref="T:MahApps.Metro.Controls.Dialogs.CustomDialog"/> class.
             </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.Title">
            <summary>
            Gets/sets the dialog's title.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.DialogTop">
            <summary>
            Gets/sets arbitrary content on top of the dialog.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.DialogBottom">
            <summary>
            Gets/sets arbitrary content below the dialog.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.DialogTitleFontSize">
            <summary>
            Gets or sets the size of the dialog title font.
            </summary>
            <value>
            The size of the dialog title font.
            </value>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.DialogMessageFontSize">
            <summary>
            Gets or sets the size of the dialog message font.
            </summary>
            <value>
            The size of the dialog message font.
            </value>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.#ctor(MahApps.Metro.Controls.MetroWindow,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Initializes a new MahApps.Metro.Controls.BaseMetroDialog.
            </summary>
            <param name="owningWindow">The window that is the parent of the dialog.</param>
            <param name="settings">The settings for the message dialog.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.#ctor">
            <summary>
            Initializes a new MahApps.Metro.Controls.BaseMetroDialog.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.ConfigureSettings(MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            With this method it's possible to return your own settings in a custom dialog.
            </summary>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.OnLoaded">
            <summary>
            This is called in the loaded event.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.WaitForLoadAsync">
            <summary>
            Waits for the dialog to become ready for interaction.
            </summary>
            <returns>A task that represents the operation and it's status.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.RequestCloseAsync">
            <summary>
            Requests an externally shown Dialog to close. Will throw an exception if the Dialog is inside of a MetroWindow.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.OnRequestClose">
            <summary>
            A last chance virtual method for stopping an external dialog from closing.
            </summary>
            <returns></returns>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.ParentDialogWindow">
            <summary>
            Gets the window that owns the current Dialog IF AND ONLY IF the dialog is shown externally.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.OwningWindow">
            <summary>
            Gets the window that owns the current Dialog IF AND ONLY IF the dialog is shown inside of a window.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.WaitUntilUnloadedAsync">
            <summary>
            Waits until this dialog gets unloaded.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.CustomDialog">
            <summary>
            An implementation of BaseMetroDialog allowing arbitrary content.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.Dialogs.DialogCoordinator.Instance">
            <summary>
            Gets the default instance if the dialog coordinator, which can be injected into a view model.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowLoginAsync(MahApps.Metro.Controls.MetroWindow,System.String,System.String,MahApps.Metro.Controls.Dialogs.LoginDialogSettings)">
            <summary>
            Creates a LoginDialog inside of the current window.
            </summary>
            <param name="window">The window that is the parent of the dialog.</param>
            <param name="title">The title of the LoginDialog.</param>
            <param name="message">The message contained within the LoginDialog.</param>
            <param name="settings">Optional settings that override the global metro dialog settings.</param>
            <returns>The text that was entered or null (Nothing in Visual Basic) if the user cancelled the operation.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowInputAsync(MahApps.Metro.Controls.MetroWindow,System.String,System.String,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Creates a InputDialog inside of the current window.
            </summary>
            <param name="window">The MetroWindow</param>
            <param name="title">The title of the MessageDialog.</param>
            <param name="message">The message contained within the MessageDialog.</param>
            <param name="settings">Optional settings that override the global metro dialog settings.</param>
            <returns>The text that was entered or null (Nothing in Visual Basic) if the user cancelled the operation.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowMessageAsync(MahApps.Metro.Controls.MetroWindow,System.String,System.String,MahApps.Metro.Controls.Dialogs.MessageDialogStyle,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Creates a MessageDialog inside of the current window.
            </summary>
            <param name="window">The MetroWindow</param>
            <param name="title">The title of the MessageDialog.</param>
            <param name="message">The message contained within the MessageDialog.</param>
            <param name="style">The type of buttons to use.</param>
            <param name="settings">Optional settings that override the global metro dialog settings.</param>
            <returns>A task promising the result of which button was pressed.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowProgressAsync(MahApps.Metro.Controls.MetroWindow,System.String,System.String,System.Boolean,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Creates a ProgressDialog inside of the current window.
            </summary>
            <param name="window">The MetroWindow</param>
            <param name="title">The title of the ProgressDialog.</param>
            <param name="message">The message within the ProgressDialog.</param>
            <param name="isCancelable">Determines if the cancel button is visible.</param>
            <param name="settings">Optional Settings that override the global metro dialog settings.</param>
            <returns>A task promising the instance of ProgressDialogController for this operation.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowMetroDialogAsync(MahApps.Metro.Controls.MetroWindow,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Adds a Metro Dialog instance to the specified window and makes it visible asynchronously.
            If you want to wait until the user has closed the dialog, use <see cref="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.WaitUntilUnloadedAsync"/>
            <para>You have to close the resulting dialog yourself with <see cref="M:MahApps.Metro.Controls.Dialogs.DialogManager.HideMetroDialogAsync(MahApps.Metro.Controls.MetroWindow,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)"/>.</para>
            </summary>
            <param name="window">The owning window of the dialog.</param>
            <param name="dialog">The dialog instance itself.</param>
            <param name="settings">An optional pre-defined settings instance.</param>
            <returns>A task representing the operation.</returns>
            <exception cref="T:System.InvalidOperationException">The <paramref name="dialog"/> is already visible in the window.</exception>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowMetroDialogAsync``1(MahApps.Metro.Controls.MetroWindow,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Adds a Metro Dialog instance of the given type to the specified window and makes it visible asynchronously.
            If you want to wait until the user has closed the dialog, use <see cref="M:MahApps.Metro.Controls.Dialogs.BaseMetroDialog.WaitUntilUnloadedAsync"/>
            <para>You have to close the resulting dialog yourself with <see cref="M:MahApps.Metro.Controls.Dialogs.DialogManager.HideMetroDialogAsync(MahApps.Metro.Controls.MetroWindow,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)"/>.</para>
            </summary>
            <param name="window">The owning window of the dialog.</param>
            <param name="settings">An optional pre-defined settings instance.</param>
            <returns>A task with the dialog representing the operation.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.HideMetroDialogAsync(MahApps.Metro.Controls.MetroWindow,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Hides a visible Metro Dialog instance.
            </summary>
            <param name="window">The window with the dialog that is visible.</param>
            <param name="dialog">The dialog instance to hide.</param>
            <param name="settings">An optional pre-defined settings instance.</param>
            <returns>A task representing the operation.</returns>
            <exception cref="T:System.InvalidOperationException">
            The <paramref name="dialog"/> is not visible in the window.
            This happens if <see cref="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowMetroDialogAsync(MahApps.Metro.Controls.MetroWindow,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)"/> hasn't been called before.
            </exception>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.GetCurrentDialogAsync``1(MahApps.Metro.Controls.MetroWindow)">
            <summary>
            Gets the current shown dialog in async way.
            </summary>
            <param name="window">The dialog owner.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowModalLoginExternal(MahApps.Metro.Controls.MetroWindow,System.String,System.String,MahApps.Metro.Controls.Dialogs.LoginDialogSettings)">
            <summary>
            Creates a LoginDialog outside of the current window.
            </summary>
            <param name="window">The window that is the parent of the dialog.</param>
            <param name="title">The title of the LoginDialog.</param>
            <param name="message">The message contained within the LoginDialog.</param>
            <param name="settings">Optional settings that override the global metro dialog settings.</param>
            <returns>The text that was entered or null (Nothing in Visual Basic) if the user cancelled the operation.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowModalInputExternal(MahApps.Metro.Controls.MetroWindow,System.String,System.String,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Creates a InputDialog outside of the current window.
            </summary>
            <param name="window">The MetroWindow</param>
            <param name="title">The title of the MessageDialog.</param>
            <param name="message">The message contained within the MessageDialog.</param>
            <param name="settings">Optional settings that override the global metro dialog settings.</param>
            <returns>The text that was entered or null (Nothing in Visual Basic) if the user cancelled the operation.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.DialogManager.ShowModalMessageExternal(MahApps.Metro.Controls.MetroWindow,System.String,System.String,MahApps.Metro.Controls.Dialogs.MessageDialogStyle,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Creates a MessageDialog ouside of the current window.
            </summary>
            <param name="window">The MetroWindow</param>
            <param name="title">The title of the MessageDialog.</param>
            <param name="message">The message contained within the MessageDialog.</param>
            <param name="style">The type of buttons to use.</param>
            <param name="settings">Optional settings that override the global metro dialog settings.</param>
            <returns>A task promising the result of which button was pressed.</returns>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.IDialogCoordinator">
            <summary>
            Use the dialog coordinator to help you interfact with dialogs from a view model.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowInputAsync(System.Object,System.String,System.String,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Shows the input dialog.
            </summary>
            <param name="context">Typically this should be the view model, which you register in XAML using <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>.</param>
            <param name="title">The title of the MessageDialog.</param>
            <param name="message">The message contained within the MessageDialog.</param>
            <param name="settings">Optional settings that override the global metro dialog settings.</param>
            <returns>The text that was entered or null (Nothing in Visual Basic) if the user cancelled the operation.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowModalInputExternal(System.Object,System.String,System.String,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Shows the input dialog.
            </summary>
            <param name="context">Typically this should be the view model, which you register in XAML using <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>.</param>
            <param name="title">The title of the MessageDialog.</param>
            <param name="message">The message contained within the MessageDialog.</param>
            <param name="settings">Optional settings that override the global metro dialog settings.</param>
            <returns>The text that was entered or null (Nothing in Visual Basic) if the user cancelled the operation.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowLoginAsync(System.Object,System.String,System.String,MahApps.Metro.Controls.Dialogs.LoginDialogSettings)">
            <summary>
            Creates a LoginDialog inside of the current window.
            </summary>
            <param name="context">Typically this should be the view model, which you register in XAML using <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>.</param>
            <param name="title">The title of the LoginDialog.</param>
            <param name="message">The message contained within the LoginDialog.</param>
            <param name="settings">Optional settings that override the global metro dialog settings.</param>
            <returns>The text that was entered or null (Nothing in Visual Basic) if the user cancelled the operation.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowModalLoginExternal(System.Object,System.String,System.String,MahApps.Metro.Controls.Dialogs.LoginDialogSettings)">
            <summary>
            Creates a LoginDialog outside of the current window.
            </summary>
            <param name="context">Typically this should be the view model, which you register in XAML using <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>.</param>
            <param name="title">The title of the LoginDialog.</param>
            <param name="message">The message contained within the LoginDialog.</param>
            <param name="settings">Optional settings that override the global metro dialog settings.</param>
            <returns>The text that was entered or null (Nothing in Visual Basic) if the user cancelled the operation.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowMessageAsync(System.Object,System.String,System.String,MahApps.Metro.Controls.Dialogs.MessageDialogStyle,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Creates a MessageDialog inside of the current window.
            </summary>
            <param name="context">Typically this should be the view model, which you register in XAML using <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>.</param>
            <param name="title">The title of the MessageDialog.</param>
            <param name="message">The message contained within the MessageDialog.</param>
            <param name="style">The type of buttons to use.</param>
            <param name="settings">Optional settings that override the global metro dialog settings.</param>
            <returns>A task promising the result of which button was pressed.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowModalMessageExternal(System.Object,System.String,System.String,MahApps.Metro.Controls.Dialogs.MessageDialogStyle,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Creates a MessageDialog outside of the current window.
            </summary>
            <param name="context">Typically this should be the view model, which you register in XAML using <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>.</param>
            <param name="title">The title of the MessageDialog.</param>
            <param name="message">The message contained within the MessageDialog.</param>
            <param name="style">The type of buttons to use.</param>
            <param name="settings">Optional settings that override the global metro dialog settings.</param>
            <returns>A task promising the result of which button was pressed.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowProgressAsync(System.Object,System.String,System.String,System.Boolean,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Creates a ProgressDialog inside of the current window.
            </summary>
            <param name="context">Typically this should be the view model, which you register in XAML using <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>.</param>
            <param name="title">The title of the ProgressDialog.</param>
            <param name="message">The message within the ProgressDialog.</param>
            <param name="isCancelable">Determines if the cancel button is visible.</param>
            <param name="settings">Optional Settings that override the global metro dialog settings.</param>
            <returns>A task promising the instance of ProgressDialogController for this operation.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowMetroDialogAsync(System.Object,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Adds a Metro Dialog instance to the specified window and makes it visible asynchronously.        
            <para>You have to close the resulting dialog yourself with <see cref="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.HideMetroDialogAsync(System.Object,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)"/>.</para>
            </summary>
            <param name="context">Typically this should be the view model, which you register in XAML using <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>.</param>
            <param name="dialog">The dialog instance itself.</param>
            <param name="settings">An optional pre-defined settings instance.</param>
            <returns>A task representing the operation.</returns>
            <exception cref="T:System.InvalidOperationException">The <paramref name="dialog"/> is already visible in the window.</exception>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.HideMetroDialogAsync(System.Object,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)">
            <summary>
            Hides a visible Metro Dialog instance.
            </summary>
            <param name="context">Typically this should be the view model, which you register in XAML using <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>.</param>
            <param name="dialog">The dialog instance to hide.</param>
            <param name="settings">An optional pre-defined settings instance.</param>
            <returns>A task representing the operation.</returns>
            <exception cref="T:System.InvalidOperationException">
            The <paramref name="dialog"/> is not visible in the window.
            This happens if <see cref="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.ShowMetroDialogAsync(System.Object,MahApps.Metro.Controls.Dialogs.BaseMetroDialog,MahApps.Metro.Controls.Dialogs.MetroDialogSettings)"/> hasn't been called before.
            </exception>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.IDialogCoordinator.GetCurrentDialogAsync``1(System.Object)">
            <summary>
            Gets the current shown dialog.
            </summary>
            <param name="context">Typically this should be the view model, which you register in XAML using <see cref="M:MahApps.Metro.Controls.Dialogs.DialogParticipation.SetRegister(System.Windows.DependencyObject,System.Object)"/>.</param>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.InputDialog">
            <summary>
            InputDialog
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.InputDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.LoginDialog">
            <summary>
            LoginDialog
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.LoginDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.MessageDialog">
            <summary>
            An internal control that represents a message dialog. Please use MetroWindow.ShowMessage instead!
            </summary>
            <summary>
            MessageDialog
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.MessageDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.MessageDialogResult">
            <summary>
            An enum representing the result of a Message Dialog.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.MessageDialogStyle">
            <summary>
            An enum representing the different button states for a Message Dialog.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.Dialogs.MessageDialogStyle.Affirmative">
            <summary>
            Just "OK"
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.Dialogs.MessageDialogStyle.AffirmativeAndNegative">
            <summary>
            "OK" and "Cancel"
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.MetroDialogColorScheme">
            <summary>
            An enum representing the different choices for a color scheme in a Metro Dialog.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.MetroDialogSettings">
            <summary>
            A class that represents the settings used by Metro Dialogs.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.OwnerCanCloseWithDialog">
            <summary>
            Gets or sets wheater the owner of the dialog can be closed.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.AffirmativeButtonText">
            <summary>
            Gets or sets the text used for the Affirmative button. For example: "OK" or "Yes".
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.AnimateHide">
            <summary>
            Enable or disable dialog hiding animation
            "True" - play hiding animation.
            "False" - skip hiding animation.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.AnimateShow">
            <summary>
            Enable or disable dialog showing animation.
            "True" - play showing animation.
            "False" - skip showing animation.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.CancellationToken">
            <summary>
            Gets or sets a token to cancel the dialog.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.ColorScheme">
            <summary>
            Gets or sets whether the metro dialog should use the default black/white appearance (theme) or try to use the current accent.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.CustomResourceDictionary">
            <summary>
            Gets or sets a custom resource dictionary which can contains custom styles, brushes or something else.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.DefaultButtonFocus">
            <summary>
            Gets or sets which button should be focused by default
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.DefaultText">
            <summary>
            Gets or sets the default text (just the inputdialog needed)
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.DialogMessageFontSize">
            <summary>
            Gets or sets the size of the dialog message font.
            </summary>
            <value>
            The size of the dialog message font.
            </value>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.DialogResultOnCancel">
            <summary>
            Gets or sets the dialog result when the user cancelled the dialog with 'ESC' key
            </summary>
            <remarks>If the value is <see langword="null"/> the default behavior is determined 
            by the <see cref="T:MahApps.Metro.Controls.Dialogs.MessageDialogStyle"/>.
            <table>
            <tr><td><see cref="T:MahApps.Metro.Controls.Dialogs.MessageDialogStyle"/></td><td><see cref="T:MahApps.Metro.Controls.Dialogs.MessageDialogResult"/></td></tr>
            <tr><td><see cref="F:MahApps.Metro.Controls.Dialogs.MessageDialogStyle.Affirmative"/></td><td><see cref="F:MahApps.Metro.Controls.Dialogs.MessageDialogResult.Affirmative"/></td></tr>
            <tr><td>
            <list type="bullet">
            <item><see cref="F:MahApps.Metro.Controls.Dialogs.MessageDialogStyle.AffirmativeAndNegative"/></item>
            <item><see cref="F:MahApps.Metro.Controls.Dialogs.MessageDialogStyle.AffirmativeAndNegativeAndSingleAuxiliary"/></item>
            <item><see cref="F:MahApps.Metro.Controls.Dialogs.MessageDialogStyle.AffirmativeAndNegativeAndDoubleAuxiliary"/></item>
            </list></td>
            <td><see cref="F:MahApps.Metro.Controls.Dialogs.MessageDialogResult.Negative"/></td></tr></table></remarks>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.DialogTitleFontSize">
            <summary>
            Gets or sets the size of the dialog title font.
            </summary>
            <value>
            The size of the dialog title font.
            </value>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.FirstAuxiliaryButtonText">
            <summary>
            Gets or sets the text used for the first auxiliary button.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.MaximumBodyHeight">
            <summary>
            Gets or sets the maximum height. (Default is unlimited height, <a href="http://msdn.microsoft.com/de-de/library/system.double.nan">Double.NaN</a>)
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.NegativeButtonText">
            <summary>
            Gets or sets the text used for the Negative button. For example: "Cancel" or "No".
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.SecondAuxiliaryButtonText">
            <summary>
            Gets or sets the text used for the second auxiliary button.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.MetroDialogSettings.SuppressDefaultResources">
            <summary>
            If set, stops standard resource dictionaries being applied to the dialog.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.ProgressDialog">
            <summary>
            An internal control that represents a message dialog. Please use MetroWindow.ShowMessage instead!
            </summary>
            <summary>
            ProgressDialog
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Dialogs.ProgressDialogController">
            <summary>
            A class for manipulating an open ProgressDialog.
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.Dialogs.ProgressDialogController.Closed">
            <summary>
            This event is raised when the associated <see cref="T:MahApps.Metro.Controls.Dialogs.ProgressDialog"/> was closed programmatically.
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.Dialogs.ProgressDialogController.Canceled">
            <summary>
            This event is raised when the associated <see cref="T:MahApps.Metro.Controls.Dialogs.ProgressDialog"/> was cancelled by the user.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.ProgressDialogController.IsCanceled">
            <summary>
            Gets if the Cancel button has been pressed.
            </summary>        
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.ProgressDialogController.IsOpen">
            <summary>
            Gets if the wrapped ProgressDialog is open.
            </summary>        
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialogController.SetIndeterminate">
            <summary>
            Sets the ProgressBar's IsIndeterminate to true. To set it to false, call SetProgress.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialogController.SetCancelable(System.Boolean)">
            <summary>
            Sets if the Cancel button is visible.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialogController.SetProgress(System.Double)">
            <summary>
            Sets the dialog's progress bar value and sets IsIndeterminate to false.
            </summary>
            <param name="value">The percentage to set as the value.</param>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.ProgressDialogController.Minimum">
            <summary>
             Gets/Sets the minimum restriction of the progress Value property
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Dialogs.ProgressDialogController.Maximum">
            <summary>
             Gets/Sets the maximum restriction of the progress Value property
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialogController.SetMessage(System.String)">
            <summary>
            Sets the dialog's message content.
            </summary>
            <param name="message">The message to be set.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialogController.SetTitle(System.String)">
            <summary>
            Sets the dialog's title.
            </summary>
            <param name="title">The title to be set.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialogController.SetProgressBarForegroundBrush(System.Windows.Media.Brush)">
            <summary>
            Sets the dialog's progress bar brush
            </summary>
            <param name="brush">The brush to use for the progress bar's foreground</param>
        </member>
        <member name="M:MahApps.Metro.Controls.Dialogs.ProgressDialogController.CloseAsync">
            <summary>
            Begins an operation to close the ProgressDialog.
            </summary>
            <returns>A task representing the operation.</returns>
        </member>
        <member name="F:MahApps.Metro.Controls.DropDownButton.ContentTemplateProperty">
            <summary>
            The DependencyProperty for the ContentTemplate property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.DropDownButton.ContentTemplateSelectorProperty">
            <summary>
            The DependencyProperty for the ContentTemplateSelector property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.DropDownButton.ContentStringFormatProperty">
            <summary>
            The DependencyProperty for the ContentStringFormat property. 
            </summary> 
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.Content">
            <summary>
            Gets or sets the Content of this control..
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ContentTemplate">
            <summary> 
            ContentTemplate is the template used to display the content of the control. 
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ContentTemplateSelector">
            <summary>
            ContentTemplateSelector allows to provide custom logic for choosing the template used to display the content of the control.
            </summary>
            <remarks> 
            This property is ignored if <seealso cref="P:MahApps.Metro.Controls.DropDownButton.ContentTemplate"/> is set.
            </remarks>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ContentStringFormat">
            <summary>
            ContentStringFormat is the format used to display the content of the control as a string
            </summary>
            <remarks> 
            This property is ignored if <seealso cref="P:MahApps.Metro.Controls.DropDownButton.ContentTemplate"/> is set.
            </remarks>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.CommandParameter">
            <summary>
            Reflects the parameter to pass to the CommandProperty upon execution. 
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.CommandTarget">
            <summary>
            Gets or sets the target element on which to fire the command.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.Command">
            <summary>
            Get or sets the Command property. 
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.IsExpanded">
            <summary> 
            Indicates whether the Menu is visible. 
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ExtraTag">
            <summary>
            Gets or sets an extra tag.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.Orientation">
            <summary>
            Gets or sets the dimension of children stacking.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.Icon">
            <summary>
             Gets or sets the Content used to generate the icon part.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.IconTemplate">
            <summary> 
            Gets or sets the ContentTemplate used to display the content of the icon part. 
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ButtonStyle">
            <summary>
            Gets/sets the button style.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.MenuStyle">
            <summary>
            Gets/sets the menu style.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ArrowBrush">
            <summary>
            Gets/sets the brush of the button arrow icon.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ArrowMouseOverBrush">
            <summary>
            Gets/sets the brush of the button arrow icon if the mouse is over the drop down button.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ArrowPressedBrush">
            <summary>
            Gets/sets the brush of the button arrow icon if the arrow button is pressed.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DropDownButton.ArrowVisibility">
            <summary>
            Gets/sets the visibility of the button arrow icon.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DropDownButton.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</summary>
            <param name="e">Information about the change.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.Extensions.BeginInvoke(System.Windows.Threading.DispatcherObject,System.Action,System.Windows.Threading.DispatcherPriority)">
            <summary> 
              Executes the specified action asynchronously with the DispatcherPriority.Background on the thread that the Dispatcher was created on.
            </summary>
            <param name="dispatcherObject">The dispatcher object where the action runs.</param>
            <param name="invokeAction">An action that takes no parameters.</param>
            <param name="priority">The dispatcher priority.</param> 
        </member>
        <member name="T:MahApps.Metro.Controls.FlipView">
            <summary>
            A control that imitate a slideshow with back/forward buttons.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.FlipView.loaded">
            <summary>
            To counteract the double Loaded event issue.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.FlipView.CoerceSelectedIndexProperty(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerce SelectedIndexProperty's value.
            </summary>
            <param name="d">The object that the property exists on.</param>
            <param name="value">The new value of the property, prior to any coercion attempt.</param>
            <returns>The coerced value (with appropriate type). </returns>
        </member>
        <member name="M:MahApps.Metro.Controls.FlipView.ComputeTransition(System.Int32,System.Int32)">
            <summary>
            Computes the transition when changing selected index.
            </summary>
            <param name="fromIndex">Previous selected index.</param>
            <param name="toIndex">New selected index.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.FlipView.GetNavigationButtons(System.Windows.Controls.Button@,System.Windows.Controls.Button@,System.Collections.Generic.IEnumerable{System.Windows.Controls.Button}@)">
            <summary>
            Gets the navigation buttons.
            </summary>
            <param name="prevButton">Previous button.</param>
            <param name="nextButton">Next button.</param>
            <param name="inactiveButtons">Inactive buttons.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.FlipView.ApplyToNavigationButtons(System.Action{System.Windows.Controls.Button},System.Action{System.Windows.Controls.Button},System.Action{System.Windows.Controls.Button})">
            <summary>
            Applies actions to navigation buttons.
            </summary>
            <param name="prevButtonApply">Action applied to the previous button.</param>
            <param name="nextButtonApply">Action applied to the next button.</param>
            <param name="inactiveButtonsApply">Action applied to the inactive buttons.</param>
            <exception cref="T:System.ArgumentNullException">Any action is null.</exception>
        </member>
        <member name="M:MahApps.Metro.Controls.FlipView.DetectControlButtonsStatus(System.Windows.Visibility)">
            <summary>
            Sets the visibility of navigation buttons.
            </summary>
            <param name="activeButtonsVisibility">Visibility of active buttons.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.FlipView.GoBack">
            <summary>
            Changes the current slide to the previous item.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.FlipView.GoForward">
            <summary>
            Changes the current to the next item.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.FlipView.ShowControlButtons">
            <summary>
            Brings the control buttons (next/previous) into view.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.FlipView.HideControlButtons">
            <summary>
            Removes the control buttons (next/previous) from view.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlipView.MouseHoverBorderEnabled">
            <summary>
            Gets or sets a value indicating whether the border for mouse over state is enabled or not.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlipView.MouseHoverBorderBrush">
            <summary>
            Gets or sets the mouse hover border brush.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlipView.MouseHoverBorderThickness">
            <summary>
            Gets or sets the mouse hover border thickness.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlipView.BannerText">
            <summary>
            Gets/sets the text that is displayed in the FlipView's banner.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlipView.IsBannerEnabled">
            <summary>
            Gets/sets whether the FlipView's banner is visible.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlipView.CircularNavigation">
            <summary>
            Gets or sets a value indicating whether the navigation is circular, so you get the first after last and the last before first.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlipView.IsNavigationEnabled">
            <summary>
            Gets/sets whether the FlipView's NavigationButton is visible.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Flyout">
            <summary>
            A sliding panel control that is hosted in a MetroWindow via a FlyoutsControl.
            <see cref="T:MahApps.Metro.Controls.MetroWindow"/>
            <seealso cref="T:MahApps.Metro.Controls.FlyoutsControl"/>
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.Flyout.IsOpenChangedEvent">
            <summary>
            An event that is raised when IsOpen changes.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.Flyout.ClosingFinishedEvent">
            <summary>
            An event that is raised when the closing animation has finished.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.TitleVisibility">
            <summary>
            Gets/sets if the title is visible in this flyout.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.CloseButtonVisibility">
            <summary>
            Gets/sets if the close button is visible in this flyout.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.CloseButtonIsCancel">
            <summary>
            Gets/sets if the close button is a cancel button in this flyout.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.CloseCommand">
            <summary>
            Gets/sets a command which will be executed if the close button was clicked.
            Note that this won't execute when <see cref="P:MahApps.Metro.Controls.Flyout.IsOpen"/> is set to <c>false</c>.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.CloseCommandParameter">
            <summary>
            Gets/sets the command parameter which will be passed by the CloseCommand.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.InternalCloseCommand">
            <summary>
            Gets/sets a command which will be executed if the close button was clicked.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.IsOpen">
            <summary>
            Gets/sets whether this flyout is visible.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.AnimateOnPositionChange">
            <summary>
            Gets/sets whether this flyout uses the open/close animation when changing the <see cref="P:MahApps.Metro.Controls.Flyout.Position"/> property. (default is true)
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.AnimateOpacity">
            <summary>
            Gets/sets whether this flyout animates the opacity of the flyout when opening/closing.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.IsPinned">
            <summary>
            Gets/sets whether this flyout stays open when the user clicks outside of it.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.ExternalCloseButton">
            <summary>
            Gets/sets the mouse button that closes the flyout on an external mouse click.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.IsModal">
            <summary>
            Gets/sets whether this flyout is modal.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.Position">
            <summary>
            Gets/sets this flyout's position in the FlyoutsControl/MetroWindow.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.Theme">
            <summary>
            Gets or sets the theme of this flyout.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.FocusedElement">
            <summary>
            Gets or sets the focused element.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.IsAutoCloseEnabled">
            <summary>
            Gets or sets a value indicating whether the flyout should auto close after AutoCloseInterval has passed.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.AutoCloseInterval">
            <summary>
            Gets or sets the time in milliseconds when the flyout should auto close.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Flyout.AllowFocusElement">
            <summary>
            Gets or sets a value indicating whether the flyout should try focus an element.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.FlyoutsControl">
            <summary>
            A FlyoutsControl is for displaying flyouts in a MetroWindow.
            <see cref="T:MahApps.Metro.Controls.MetroWindow"/>
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlyoutsControl.OverrideExternalCloseButton">
            <summary>
            Gets/sets whether <see cref="P:MahApps.Metro.Controls.Flyout.ExternalCloseButton"/> is ignored and all flyouts behave as if it was set to the value of this property.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.FlyoutsControl.OverrideIsPinned">
            <summary>
            Gets/sets whether <see cref="P:MahApps.Metro.Controls.Flyout.IsPinned"/> is ignored and all flyouts behave as if it was set false.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.FlyoutTheme.Adapt">
            <summary>
            Adapts the Flyout's theme to the theme of its host window.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.FlyoutTheme.Inverse">
            <summary>
            Adapts the Flyout's theme to the theme of its host window, but inverted.
            This theme can only be applied if the host window's theme abides the "Dark" and "Light" affix convention.
            (see <see cref="M:MahApps.Metro.ThemeManager.GetInverseAppTheme(MahApps.Metro.AppTheme)"/> for more infos.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.FlyoutTheme.Dark">
            <summary>
            The dark theme. This is the default theme.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.FlyoutTheme.Accent">
            <summary>
            The flyouts theme will match the host window's accent color.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.GlowWindow">
            <summary>
            GlowWindow
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.GlowWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.HamburgerMenu">
            <summary>
            The HamburgerMenu is based on a SplitView control. By default it contains a HamburgerButton and a ListView to display menu items.
            </summary>
            <summary>
            The HamburgerMenu is based on a SplitView control. By default it contains a HamburgerButton and a ListView to display menu items.
            </summary>
            <summary>
            The HamburgerMenu is based on a SplitView control. By default it contains a HamburgerButton and a ListView to display menu items.
            </summary>
            <summary>
            The HamburgerMenu is based on a SplitView control. By default it contains a HamburgerButton and a ListView to display menu items.
            </summary>
            <summary>
            The HamburgerMenu is based on a SplitView control. By default it contains a HamburgerButton and a ListView to display menu items.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.HamburgerMenu.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MahApps.Metro.Controls.HamburgerMenu"/> class.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.HamburgerMenu.OnApplyTemplate">
            <summary>
            Override default OnApplyTemplate to capture children controls
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.HamburgerMenu.ItemClick">
            <summary>
            Event raised when an item is clicked
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.HamburgerMenu.OptionsItemClick">
            <summary>
            Event raised when an options' item is clicked
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.HamburgerMenu.ItemInvoked">
            <summary>
            Event raised when an item is invoked
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.HamburgerWidthProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.HamburgerWidth"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.HamburgerHeightProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.HamburgerHeight"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.HamburgerMarginProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.HamburgerMargin"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.HamburgerVisibilityProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.HamburgerVisibility"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.HamburgerMenuTemplateProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.HamburgerMenuTemplate"/> dependency property.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.HamburgerMenuTemplate">
            <summary>
            Gets or sets a template for the hamburger icon.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.HamburgerMenuHeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.HamburgerMenuHeaderTemplate"/> dependency property.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.HamburgerMenuHeaderTemplate">
            <summary>
            Gets or sets a template for the hamburger icon.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.HamburgerWidth">
            <summary>
            Gets or sets main button's width.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.HamburgerHeight">
            <summary>
            Gets or sets main button's height.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.HamburgerMargin">
            <summary>
            Gets or sets main button's margin.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.HamburgerVisibility">
            <summary>
            Gets or sets main button's visibility.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.OptionsItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.OptionsItemsSource"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.OptionsItemContainerStyleProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.OptionsItemContainerStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.OptionsItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.OptionsItemTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.OptionsItemTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.OptionsItemTemplateSelector"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.OptionsVisibilityProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.OptionsVisibility"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.SelectedOptionsItemProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.SelectedOptionsItem"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.SelectedOptionsIndexProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.SelectedOptionsIndex"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.OptionsItemCommandProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.OptionsItemCommand"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.OptionsItemCommandParameterProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.OptionsItemCommandParameter"/> dependency property.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.OptionsItemsSource">
            <summary>
            Gets or sets an object source used to generate the content of the options.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.OptionsItemContainerStyle">
            <summary>
            Gets or sets the Style used for each item in the options.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.OptionsItemTemplate">
            <summary>
            Gets or sets the DataTemplate used to display each item in the options.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.OptionsItemTemplateSelector">
            <summary>
            Gets or sets the DataTemplateSelector used to display each item in the options.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.OptionsItems">
            <summary>
            Gets the collection used to generate the content of the option list.
            </summary>
            <exception cref="T:System.Exception">
            Exception thrown if OptionsListView is not yet defined.
            </exception>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.OptionsVisibility">
            <summary>
            Gets or sets the visibility of the options menu.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.SelectedOptionsItem">
            <summary>
            Gets or sets the selected options menu item.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.SelectedOptionsIndex">
            <summary>
            Gets or sets the selected options menu index.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.OptionsItemCommand">
            <summary>
            Gets or sets a command which will be executed if an options item is clicked by the user.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.OptionsItemCommandParameter">
            <summary>
            Gets or sets the command parameter which will be passed by the OptionsItemCommand.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.HamburgerMenu.RaiseOptionsItemCommand">
            <summary>
            Executes the options item command which can be set by the user.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.OpenPaneLengthProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.OpenPaneLength"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.PanePlacementProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.PanePlacement"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.DisplayModeProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.DisplayMode"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.CompactPaneLengthProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.CompactPaneLength"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.PaneBackgroundProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.PaneBackground"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.PaneForegroundProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.PaneForeground"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.IsPaneOpenProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.IsPaneOpen"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.ItemsSource"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.ItemContainerStyleProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.ItemContainerStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.ItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.ItemTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.ItemTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.ItemTemplateSelector"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.SelectedItemProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.SelectedItem"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.SelectedIndexProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.SelectedIndex"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.ContentTransitionProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.ContentTransition"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.ItemCommandProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.ItemCommand"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.ItemCommandParameterProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.ItemCommandParameter"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.VerticalScrollBarOnLeftSideProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.VerticalScrollBarOnLeftSide"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.ShowSelectionIndicatorProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.ShowSelectionIndicator"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenu.ItemFocusVisualStyleProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenu.ItemFocusVisualStyle"/> dependency property.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.OpenPaneLength">
            <summary>
            Gets or sets the width of the pane when it's fully expanded.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.PanePlacement">
            <summary>
            Gets or sets a value that specifies whether the pane is shown on the right or left side of the control.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.DisplayMode">
            <summary>
            Gets or sets a value that specifies how the pane and content areas are shown.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.CompactPaneLength">
            <summary>
            Gets or sets the width of the pane in its compact display mode.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.PaneBackground">
            <summary>
            Gets or sets the Brush to apply to the background of the Pane area of the control.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.PaneForeground">
            <summary>
            Gets or sets the Brush to apply to the foreground of the Pane area of the control.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.IsPaneOpen">
            <summary>
            Gets or sets a value indicating whether the pane is expanded to its full width.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.ItemsSource">
            <summary>
            Gets or sets an object source used to generate the content of the menu.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.ItemContainerStyle">
            <summary>
            Gets or sets the Style used for each item.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.ItemTemplate">
            <summary>
            Gets or sets the DataTemplate used to display each item.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.ItemTemplateSelector">
            <summary>
            Gets or sets the DataTemplateSelector used to display each item.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.Items">
            <summary>
            Gets the collection used to generate the content of the items list.
            </summary>
            <exception cref="T:System.Exception">
            Exception thrown if ButtonsListView is not yet defined.
            </exception>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.SelectedItem">
            <summary>
            Gets or sets the selected menu item.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.SelectedIndex">
            <summary>
            Gets or sets the selected menu index.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.ItemCommand">
            <summary>
            Gets or sets a command which will be executed if an item is clicked by the user.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.ItemCommandParameter">
            <summary>
            Gets or sets the command parameter which will be passed by the ItemCommand.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.VerticalScrollBarOnLeftSide">
            <summary>
            Gets or sets wheather the ScrollBar of the HamburgerMenu is on the left side or on the right side.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.ShowSelectionIndicator">
            <summary>
            Gets or sets wheather a selection indicator will be shown on the HamburgerMenuItem.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenu.ItemFocusVisualStyle">
            <summary>
            Gets or sets the default FocusVisualStyle for a HamburgerMenuItem.
            This style can be override at the HamburgerMenuItem style by setting the FocusVisualStyle property.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.HamburgerMenu.RaiseItemCommand">
            <summary>
            Executes the item command which can be set by the user.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.ItemClickEventArgs">
            <summary>
            EventArgs used for the <see cref="T:MahApps.Metro.Controls.HamburgerMenu"/> ItemClick and OptionsItemClick event.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ItemClickEventArgs.ClickedItem">
            <summary>
            Gets the clicked item
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.HamburgerMenuItemInvokedEventArgs">
            <summary>
            EventArgs used for the <see cref="T:MahApps.Metro.Controls.HamburgerMenu"/> ItemInvoked event.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenuItemInvokedEventArgs.InvokedItem">
            <summary>
            Gets the invoked item
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenuItemInvokedEventArgs.IsItemOptions">
            <summary>
            Gets a value indicating whether the invoked item is an options item
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.HamburgerMenuGlyphItem">
            <summary>
            The HamburgerMenuGlyphItem provides a glyph based implementation for HamburgerMenu entries.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenuGlyphItem.GlyphProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenuGlyphItem.Glyph"/> dependency property.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenuGlyphItem.Glyph">
            <summary>
            Gets or sets a value that specifies the glyph to use from Segoe MDL2 Assets font.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.HamburgerMenuIconItem">
            <summary>
            The HamburgerMenuIconItem provides an icon based implementation for HamburgerMenu entries.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenuIconItem.IconProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenuIconItem.Icon"/> dependency property.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenuIconItem.Icon">
            <summary>
            Gets or sets a value that specifies an user specific object which can be used as icon.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.HamburgerMenuImageItem">
            <summary>
            The HamburgerMenuImageItem provides an image based implementation for HamburgerMenu entries.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenuImageItem.ThumbnailProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenuImageItem.Thumbnail"/> dependency property.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenuImageItem.Thumbnail">
            <summary>
            Gets or sets a value that specifies a bitmap to display with an Image control.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.HamburgerMenuItem">
            <summary>
            The HamburgerMenuItem provides an implementation for HamburgerMenu entries.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenuItem.LabelProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenuItem.Label"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenuItem.TargetPageTypeProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenuItem.TargetPageType"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenuItem.TagProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenuItem.Tag"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenuItem.CommandProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenuItem.Command"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenuItem.CommandParameterProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenuItem.CommandParameter"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenuItem.CommandTargetProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenuItem.CommandTarget"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenuItem.IsEnabledProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenuItem.IsEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.HamburgerMenuItem.ToolTipProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.HamburgerMenuItem.ToolTip"/> dependency property. 
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenuItem.Label">
            <summary>
            Gets or sets a value that specifies label to display.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenuItem.TargetPageType">
            <summary>
            Gets or sets a value that specifies the page to navigate to (if you use the HamburgerMenu with a Frame content)
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenuItem.Tag">
            <summary>
            Gets or sets a value that specifies an user specific value.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenuItem.Command">
            <summary>
            Gets or sets a command which will be executed if an item is clicked by the user.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenuItem.CommandParameter">
            <summary>
            Gets or sets the command parameter which will be passed by the Command.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenuItem.CommandTarget">
            <summary>
            Gets or sets the element on which to raise the specified command.
            </summary>
            <returns>
            Element on which to raise a command.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenuItem.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this item is enabled in the user interface (UI). This is a dependency property.
            </summary>
            <returns>
            true if the item is enabled; otherwise, false. The default value is true.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.HamburgerMenuItem.ToolTip">
            <summary>
            Gets or sets a value that specifies ToolTip to display.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.HamburgerMenuItem.RaiseCommand">
            <summary>
            Executes the command which can be set by the user.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.HamburgerMenuItemCollection">
            <summary>
            The HamburgerMenuItemCollection provides typed collection of HamburgerMenuItem.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.AmPmComparer">
             <summary>
             Represents an hour comparison operation that ensures that 12 is smaller than 1.
             This ensures that in the <see cref="T:MahApps.Metro.Controls.TimePickerBase"/> control the first hour that is selectable is 12 (AM/PM). 
             </summary>
            <remarks>
             This ensures that the first hour that is selectable is 12 (AM/PM). <br></br>
             This comparer is used only if in the corresponding <see cref="T:MahApps.Metro.Controls.TimePickerBase"/> the value for <see cref="P:MahApps.Metro.Controls.TimePickerBase.IsMilitaryTime"/> is false.
             </remarks>
        </member>
        <member name="M:MahApps.Metro.Controls.ButtonHelper.GetPreserveTextCase(System.Windows.UIElement)">
            <summary>
            Overrides the text case behavior for certain buttons.
            When set to <c>true</c>, the text case will be preserved and won't be changed to upper or lower case.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ButtonHelper.CornerRadiusProperty">
            <summary>
            DependencyProperty for <see cref="T:System.Windows.CornerRadius" /> property.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ButtonHelper.GetCornerRadius(System.Windows.UIElement)">
            <summary> 
            The CornerRadius property allows users to control the roundness of the button corners independently by 
            setting a radius value for each corner. Radius values that are too large are scaled so that they
            smoothly blend from corner to corner. (Can be used e.g. at MetroButton style)
            Description taken from original Microsoft description :-D
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.ComboBoxHelper">
            <summary>
            A helper class that provides various attached properties for the <see cref="T:System.Windows.Controls.ComboBox"/> control.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ComboBoxHelper.GetMaxLength(System.Windows.UIElement)">
            <summary>
            Gets the Maximum number of characters the TextBox can accept.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ComboBoxHelper.SetMaxLength(System.Windows.UIElement,System.Int32)">
            <summary>
            Sets the Maximum number of characters the TextBox can accept.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ComboBoxHelper.GetCharacterCasing(System.Windows.UIElement)">
            <summary>
            Gets the Character casing of the TextBox.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ComboBoxHelper.SetCharacterCasing(System.Windows.UIElement,System.Windows.Controls.CharacterCasing)">
            <summary>
            Sets the Character casing of the TextBox.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.ControlsHelper">
            <summary>
            A helper class that provides various controls.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.GetDisabledVisualElementVisibility(System.Windows.UIElement)">
            <summary>
            Gets the value to handle the visibility of the DisabledVisualElement in the template.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.SetDisabledVisualElementVisibility(System.Windows.UIElement,System.Windows.Visibility)">
            <summary>
            Sets the value to handle the visibility of the DisabledVisualElement in the template.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ControlsHelper.ContentCharacterCasingProperty">
            <summary>
            The DependencyProperty for the CharacterCasing property.
            Controls whether or not content is converted to upper or lower case
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.GetContentCharacterCasing(System.Windows.UIElement)">
            <summary>
            Gets the character casing of the control
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.SetContentCharacterCasing(System.Windows.UIElement,System.Windows.Controls.CharacterCasing)">
            <summary>
            Sets the character casing of the control
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ControlsHelper.ButtonWidthProperty">
            <summary>
            This property can be used to set the button width (PART_ClearText) of TextBox, PasswordBox, ComboBox, NumericUpDown
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.SetFocusBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the brush used to draw the focus border.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.GetFocusBorderBrush(System.Windows.DependencyObject)">
            <summary>
            Gets the brush used to draw the focus border.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.SetMouseOverBorderBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the brush used to draw the mouse over brush.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.GetMouseOverBorderBrush(System.Windows.DependencyObject)">
            <summary>
            Gets the brush used to draw the mouse over brush.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ControlsHelper.CornerRadiusProperty">
            <summary>
            DependencyProperty for <see cref="T:System.Windows.CornerRadius" /> property.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.GetCornerRadius(System.Windows.UIElement)">
            <summary> 
            The CornerRadius property allows users to control the roundness of the button corners independently by 
            setting a radius value for each corner. Radius values that are too large are scaled so that they
            smoothly blend from corner to corner. (Can be used e.g. at MetroButton style)
            Description taken from original Microsoft description :-D
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ControlsHelper.IsReadOnlyProperty">
            <summary>
            Gets or sets a value indicating whether the child contents of the control are not editable.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.GetIsReadOnly(System.Windows.UIElement)">
            <summary>
            Gets a value indicating whether the child contents of the control are not editable.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ControlsHelper.SetIsReadOnly(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets a value indicating whether the child contents of the control are not editable.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridCellHelper.GetSaveDataGrid(System.Windows.UIElement)">
            <summary>
            Save the DataGrid.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridCellHelper.GetDataGrid(System.Windows.UIElement)">
            <summary>
            Get the DataGrid.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridCellHelper.GetSelectionUnit(System.Windows.UIElement)">
            <summary>
            Gets the value to define the DataGridCell selection behavior.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridCellHelper.SetSelectionUnit(System.Windows.UIElement,System.Windows.Controls.DataGridSelectionUnit)">
            <summary>
            Sets the value to define the DataGridCell selection behavior.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridCellHelper.GetIsCellOrRowHeader(System.Windows.UIElement)">
            <summary>
            Gets the value to define the DataGridCell selection behavior.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridCellHelper.SetIsCellOrRowHeader(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the value to define the DataGridCell selection behavior.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridHelper.GetEnableCellEditAssist(System.Windows.DependencyObject)">
            <summary>
            Gets a value which indicates the preview cell editing is enabled or not.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridHelper.SetEnableCellEditAssist(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets a value which indicates the preview cell editing is enabled or not.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridRowHelper.GetSelectionUnit(System.Windows.UIElement)">
            <summary>
            Gets the value to define the DataGridRow selection behavior.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.DataGridRowHelper.SetSelectionUnit(System.Windows.UIElement,System.Windows.Controls.DataGridSelectionUnit)">
            <summary>
            Sets the value to define the DataGridRow selection behavior.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.ExpanderHelper">
            <summary>
            A helper class that provides various attached properties for the Expander control.
            <see cref="T:System.Windows.Controls.Expander"/>
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.GetHeaderUpStyle(System.Windows.UIElement)">
            <summary>
            Gets the toggle button style used for the ExpandDirection Up.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.SetHeaderUpStyle(System.Windows.UIElement,System.Windows.Style)">
            <summary>
            Sets the toggle button style used for the ExpandDirection Up.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.GetHeaderDownStyle(System.Windows.UIElement)">
            <summary>
            Gets the toggle button style used for the ExpandDirection Down.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.SetHeaderDownStyle(System.Windows.UIElement,System.Windows.Style)">
            <summary>
            Sets the toggle button style used for the ExpandDirection Down.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.GetHeaderLeftStyle(System.Windows.UIElement)">
            <summary>
            Gets the toggle button style used for the ExpandDirection Left.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.SetHeaderLeftStyle(System.Windows.UIElement,System.Windows.Style)">
            <summary>
            Sets the toggle button style used for the ExpandDirection Left.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.GetHeaderRightStyle(System.Windows.UIElement)">
            <summary>
            Gets the toggle button style used for the ExpandDirection Right.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ExpanderHelper.SetHeaderRightStyle(System.Windows.UIElement,System.Windows.Style)">
            <summary>
            Sets the toggle button style used for the ExpandDirection Right.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ItemHelper.ActiveSelectionBackgroundBrushProperty">
            <summary>
            Gets or sets the background brush which will be used for the active selected item (if the keyboard focus is within).
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.GetActiveSelectionBackgroundBrush(System.Windows.UIElement)">
            <summary>
            Gets the brush the background brush which will be used for the active selected item (if the keyboard focus is within).
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.SetActiveSelectionBackgroundBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the brush the background brush which will be used for the active selected item (if the keyboard focus is within).
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ItemHelper.ActiveSelectionForegroundBrushProperty">
            <summary>
            Gets or sets the foreground brush which will be used for the active selected item (if the keyboard focus is within).
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.GetActiveSelectionForegroundBrush(System.Windows.UIElement)">
            <summary>
            Gets the brush the foreground brush which will be used for the active selected item (if the keyboard focus is within).
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.SetActiveSelectionForegroundBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the brush the foreground brush which will be used for the active selected item (if the keyboard focus is within).
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ItemHelper.SelectedBackgroundBrushProperty">
            <summary>
            Gets or sets the background brush which will be used for a selected item.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.GetSelectedBackgroundBrush(System.Windows.UIElement)">
            <summary>
            Gets the background brush which will be used for a selected item.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.SetSelectedBackgroundBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the background brush which will be used for a selected item.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ItemHelper.SelectedForegroundBrushProperty">
            <summary>
            Gets or sets the foreground brush which will be used for a selected item.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.GetSelectedForegroundBrush(System.Windows.UIElement)">
            <summary>
            Gets the foreground brush which will be used for a selected item.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.SetSelectedForegroundBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the foreground brush which will be used for a selected item.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ItemHelper.HoverBackgroundBrushProperty">
            <summary>
            Gets or sets the background brush which will be used for an mouse hovered item.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.GetHoverBackgroundBrush(System.Windows.UIElement)">
            <summary>
            Gets the background brush which will be used for an mouse hovered item.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.SetHoverBackgroundBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the background brush which will be used for an mouse hovered item.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ItemHelper.HoverSelectedBackgroundBrushProperty">
            <summary>
            Gets or sets the background brush which will be used for an mouse hovered and selected item.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.GetHoverSelectedBackgroundBrush(System.Windows.UIElement)">
            <summary>
            Gets the background brush which will be used for an mouse hovered and selected item.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.SetHoverSelectedBackgroundBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the background brush which will be used for an mouse hovered and selected item.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ItemHelper.DisabledSelectedBackgroundBrushProperty">
            <summary>
            Gets or sets the background brush which will be used for selected disabled items.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.GetDisabledSelectedBackgroundBrush(System.Windows.UIElement)">
            <summary>
            Gets the background brush which will be used for selected disabled items.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.SetDisabledSelectedBackgroundBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the background brush which will be used for selected disabled items.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ItemHelper.DisabledSelectedForegroundBrushProperty">
            <summary>
            Gets or sets the foreground brush which will be used for selected disabled items.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.GetDisabledSelectedForegroundBrush(System.Windows.UIElement)">
            <summary>
            Gets the foreground brush which will be used for selected disabled items.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.SetDisabledSelectedForegroundBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the foreground brush which will be used for selected disabled items.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ItemHelper.DisabledBackgroundBrushProperty">
            <summary>
            Gets or sets the background brush which will be used for disabled items.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.GetDisabledBackgroundBrush(System.Windows.UIElement)">
            <summary>
            Gets the background brush which will be used for disabled items.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.SetDisabledBackgroundBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the background brush which will be used for disabled items.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ItemHelper.DisabledForegroundBrushProperty">
            <summary>
            Gets or sets the foreground brush which will be used for disabled items.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.GetDisabledForegroundBrush(System.Windows.UIElement)">
            <summary>
            Gets the foreground brush which will be used for disabled items.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ItemHelper.SetDisabledForegroundBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the foreground brush which will be used for disabled items.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MouseWheelChange.SmallChange">
            <summary>
            Change the value of the slider if the user rotates the mouse wheel by the value defined for <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"/>
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MouseWheelChange.LargeChange">
            <summary>
            Change the value of the slider if the user rotates the mouse wheel by the value defined for <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"/>
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MouseWheelState.None">
            <summary>
            Do not change the value of the slider if the user rotates the mouse wheel.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MouseWheelState.ControlFocused">
            <summary>
            Change the value of the slider only if the control is focused.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MouseWheelState.MouseHover">
            <summary>
            Changes the value of the slider if the mouse pointer is over this element.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.PasswordBoxHelper.GetRevealButtonContent(System.Windows.DependencyObject)">
            <summary>
            Gets the content of the RevealButton.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.PasswordBoxHelper.SetRevealButtonContent(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the content of the RevealButton.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.PasswordBoxHelper.GetRevealButtonContentTemplate(System.Windows.DependencyObject)">
            <summary> 
            Gets the data template used to display the content of the RevealButton.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.PasswordBoxHelper.SetRevealButtonContentTemplate(System.Windows.DependencyObject,System.Windows.DataTemplate)">
            <summary> 
            Sets the data template used to display the content of the RevealButton.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ScrollBarHelper.VerticalScrollBarOnLeftSideProperty">
            <summary>
            This property can be used to set vertical scrollbar left side from the tabpanel (look at MetroAnimatedSingleRowTabControl)
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ScrollViewerHelper.VerticalScrollBarOnLeftSideProperty">
            <summary>
            Identifies the VerticalScrollBarOnLeftSide attached property.
            This property can be used to set vertical scrollbar left side from the tabpanel (look at MetroAnimatedSingleRowTabControl)
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ScrollViewerHelper.GetVerticalScrollBarOnLeftSide(System.Windows.UIElement)">
            <summary>
            Gets whether the vertical ScrollBar is on the left side or not.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ScrollViewerHelper.SetVerticalScrollBarOnLeftSide(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets whether the vertical ScrollBar should be on the left side or not.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ScrollViewerHelper.IsHorizontalScrollWheelEnabledProperty">
            <summary>
            Identifies the IsHorizontalScrollWheelEnabled attached property.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ScrollViewerHelper.GetIsHorizontalScrollWheelEnabled(System.Windows.UIElement)">
            <summary>
            Gets whether the ScrollViewer is scrolling horizontal by using the mouse wheel.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ScrollViewerHelper.SetIsHorizontalScrollWheelEnabled(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets whether the ScrollViewer should be scroll horizontal by using the mouse wheel.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SliderHelper.ThumbFillBrushProperty">
            <summary>
            Gets or sets the brush of the thumb.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetThumbFillBrush(System.Windows.UIElement)">
            <summary>
            Gets the brush of the thumb.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetThumbFillBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the brush of the thumb.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SliderHelper.ThumbFillHoverBrushProperty">
            <summary>
            Gets or sets the brush of the thumb if the mouse is over the slider.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetThumbFillHoverBrush(System.Windows.UIElement)">
            <summary>
            Gets the brush of the thumb if the mouse is over the slider.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetThumbFillHoverBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the brush of the thumb if the mouse is over the slider.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SliderHelper.ThumbFillPressedBrushProperty">
            <summary>
            Gets or sets the brush of the thumb if the mouse button is pressed.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetThumbFillPressedBrush(System.Windows.UIElement)">
            <summary>
            Gets the brush of the thumb if the mouse button is pressed.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetThumbFillPressedBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the brush of the thumb if the mouse button is pressed.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SliderHelper.ThumbFillDisabledBrushProperty">
            <summary>
            Gets or sets the brush of the thumb if the slider is disabled.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetThumbFillDisabledBrush(System.Windows.UIElement)">
            <summary>
            Gets the brush of the thumb if the slider is disabled.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetThumbFillDisabledBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the brush of the thumb if the slider is disabled.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SliderHelper.TrackFillBrushProperty">
            <summary>
            Gets or sets the brush of the track.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetTrackFillBrush(System.Windows.UIElement)">
            <summary>
            Gets the brush of the track.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetTrackFillBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the brush of the track.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SliderHelper.TrackFillHoverBrushProperty">
            <summary>
            Gets or sets the brush of the track if the mouse is over the slider.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetTrackFillHoverBrush(System.Windows.UIElement)">
            <summary>
            Gets the brush of the track if the mouse is over the slider.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetTrackFillHoverBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the brush of the track if the mouse is over the slider.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SliderHelper.TrackFillPressedBrushProperty">
            <summary>
            Gets or sets the brush of the track if the mouse button is pressed.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetTrackFillPressedBrush(System.Windows.UIElement)">
            <summary>
            Gets the brush of the track if the mouse button is pressed.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetTrackFillPressedBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the brush of the track if the mouse button is pressed.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SliderHelper.TrackFillDisabledBrushProperty">
            <summary>
            Gets or sets the brush of the track if the slider is disabled.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetTrackFillDisabledBrush(System.Windows.UIElement)">
            <summary>
            Gets the brush of the track if the slider is disabled.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetTrackFillDisabledBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the brush of the track if the slider is disabled.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SliderHelper.TrackValueFillBrushProperty">
            <summary>
            Gets or sets the brush of the track value.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetTrackValueFillBrush(System.Windows.UIElement)">
            <summary>
            Gets the brush of the track value.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetTrackValueFillBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the brush of the track value.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SliderHelper.TrackValueFillHoverBrushProperty">
            <summary>
            Gets or sets the brush of the track value if the mouse is over the slider.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetTrackValueFillHoverBrush(System.Windows.UIElement)">
            <summary>
            Gets the brush of the track value if the mouse is over the slider.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetTrackValueFillHoverBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the brush of the track value if the mouse is over the slider.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SliderHelper.TrackValueFillPressedBrushProperty">
            <summary>
            Gets or sets the brush of the track value if the mouse button is pressed.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetTrackValueFillPressedBrush(System.Windows.UIElement)">
            <summary>
            Gets the brush of the track value if the mouse button is pressed.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetTrackValueFillPressedBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the brush of the track value if the mouse button is pressed.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SliderHelper.TrackValueFillDisabledBrushProperty">
            <summary>
            Gets or sets the brush of the track value if the slider is disabled.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetTrackValueFillDisabledBrush(System.Windows.UIElement)">
            <summary>
            Gets the brush of the track value if the slider is disabled.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetTrackValueFillDisabledBrush(System.Windows.UIElement,System.Windows.Media.Brush)">
            <summary>
            Sets the brush of the track value if the slider is disabled.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetChangeValueBy(System.Windows.UIElement)">
            <summary>
            Gets/Sets the type how the value will be changed if the user rotates the mouse wheel.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetChangeValueBy(System.Windows.UIElement,MahApps.Metro.Controls.MouseWheelChange)">
            <summary>
            Gets/Sets the type how the value will be changed if the user rotates the mouse wheel.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.GetEnableMouseWheel(System.Windows.UIElement)">
            <summary>
            Gets/Sets the value when the slider will be changed. Possible values are if the slider is focused or if the mouse is over the slider.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SliderHelper.SetEnableMouseWheel(System.Windows.UIElement,MahApps.Metro.Controls.MouseWheelState)">
            <summary>
            Gets/Sets the value when the slider will be changed. Possible values are if the slider is focused or if the mouse is over the slider.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.UnderlinedType">
            <summary>
            Specifies the underline position of a TabControl.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TabControlHelper.ClearStyle(System.Windows.Controls.TabItem)">
             Sets the Style and Template property to null.
             
             Removing a TabItem in code behind can produce such nasty output
             System.Windows.Data Warning: 4 : Cannot find source for binding with reference 'RelativeSource FindAncestor, AncestorType='System.Windows.Controls.TabControl', AncestorLevel='1''. BindingExpression:Path=Background; DataItem=null; target element is 'TabItem' (Name=''); target property is 'Background' (type 'Brush')
             or
             System.Windows.Data Error: 4 : Cannot find source for binding with reference 'RelativeSource FindAncestor, AncestorType='System.Windows.Controls.TabControl', AncestorLevel='1''. BindingExpression:Path=(0); DataItem=null; target element is 'TabItem' (Name=''); target property is 'UnderlineBrush' (type 'Brush')
            
             This is a timing problem in WPF of the binding mechanism itself.
            
             To avoid this, we can set the Style and Template to null.
        </member>
        <member name="F:MahApps.Metro.Controls.TabControlHelper.CloseButtonEnabledProperty">
            <summary>
            Identifies the CloseButtonEnabled attached property.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TabControlHelper.GetCloseButtonEnabled(System.Windows.UIElement)">
            <summary>
            Gets whether a close button should be visible or not.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TabControlHelper.SetCloseButtonEnabled(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets whether a close button should be visible or not.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TabControlHelper.CloseTabCommandProperty">
            <summary>
            Identifies the CloseTabCommand attached property.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TabControlHelper.GetCloseTabCommand(System.Windows.UIElement)">
            <summary>
            Gets a command for the TabItem which executes if the TabItem will be closed.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TabControlHelper.SetCloseTabCommand(System.Windows.UIElement,System.Windows.Input.ICommand)">
            <summary>
            Sets a command for the TabItem which executes if the TabItem will be closed.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TabControlHelper.CloseTabCommandParameterProperty">
            <summary>
            Identifies the CloseTabCommandParameter attached property.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TabControlHelper.GetCloseTabCommandParameter(System.Windows.UIElement)">
            <summary>
            Gets a command parameter for the TabItem that will be passed to the CloseTabCommand.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TabControlHelper.SetCloseTabCommandParameter(System.Windows.UIElement,System.Object)">
            <summary>
            Sets a command parameter for the TabItem that will be passed to the CloseTabCommand.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TabControlHelper.IsUnderlinedProperty">
            <summary>
            Defines whether the underline below the <see cref="T:System.Windows.Controls.TabItem"/> is shown or not.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TabControlHelper.UnderlinedProperty">
            <summary>
            Defines whether the underline below the <see cref="T:System.Windows.Controls.TabItem"/> or <see cref="T:System.Windows.Controls.Primitives.TabPanel"/> is shown or not.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TabControlHelper.UnderlineBrushProperty">
            <summary>
            Defines the underline brush below the <see cref="T:System.Windows.Controls.TabItem"/> or <see cref="T:System.Windows.Controls.Primitives.TabPanel"/>.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TabControlHelper.UnderlineSelectedBrushProperty">
            <summary>
            Defines the underline brush below the <see cref="T:System.Windows.Controls.TabItem"/> or <see cref="T:System.Windows.Controls.Primitives.TabPanel"/> of an selected item.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TabControlHelper.UnderlineMouseOverBrushProperty">
            <summary>
            Defines the underline brush below the <see cref="T:System.Windows.Controls.TabItem"/> or <see cref="T:System.Windows.Controls.Primitives.TabPanel"/> if the mouse is over an item.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TabControlHelper.UnderlineMouseOverSelectedBrushProperty">
            <summary>
            Defines the underline brush below the <see cref="T:System.Windows.Controls.TabItem"/> or <see cref="T:System.Windows.Controls.Primitives.TabPanel"/> if the mouse is over a selected item.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TabControlHelper.TransitionProperty">
            <summary>
            This property can be used to set the Transition for animated TabControls
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.TextBoxHelper">
            <summary>
            A helper class that provides various attached properties for the TextBox control.
            </summary>
            <remarks>
            Password watermarking code from: http://prabu-guru.blogspot.com/2010/06/how-to-add-watermark-text-to-textbox.html
            </remarks>
        </member>
        <member name="F:MahApps.Metro.Controls.TextBoxHelper.IsClearTextButtonBehaviorEnabledProperty">
            <summary>
            The clear text button behavior property. It sets a click event to the button if the value is true.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TextBoxHelper.ButtonWidthProperty">
            <summary>
            This property can be used to set the button width (PART_ClearText) of TextBox, PasswordBox, ComboBox, NumericUpDown
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TextBoxHelper.AutoWatermarkProperty">
            <summary>
            This property can be used to retrieve the watermark using the <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute"/> of bound property.
            </summary>
            <remarks>
            Setting this property to true will uses reflection.
            </remarks>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetIsSpellCheckContextMenuEnabled(System.Windows.UIElement)">
            <summary>
            Indicates if a TextBox or RichTextBox should use SpellCheck context menu
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.SetAutoWatermark(System.Windows.DependencyObject,System.Boolean)">
             <summary>
             Indicates if the watermark is automatically retrieved by using the <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute"/> of the bound property.
             </summary>
            <remarks>This attached property uses reflection; thus it might reduce the performance of the application.
            The auto-watermak does work for the following controls:
            In the following case no custom watermark is shown
            <list type="bullet">
            <item>There is no binding</item>
            <item>Binding path errors</item>
            <item>Binding to a element of a collection without using a property of that element <c>Binding Path=Collection[0]</c> use: <c>Binding Path=Collection[0].SubProperty</c></item>
            <item>The bound property does not have a <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute"/></item>
            </list></remarks>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetWatermarkAlignment(System.Windows.DependencyObject)">
            <summary>
            Gets a value that indicates the horizontal alignment of the watermark.
            </summary>
            <returns>
            One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the desired alignment. The default is <see cref="F:System.Windows.TextAlignment.Left" />.
            </returns>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.SetWatermarkAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)">
            <summary>
            Sets a value that indicates the horizontal alignment of the watermark.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetWatermarkTrimming(System.Windows.DependencyObject)">
            <summary>
            Gets the text trimming behavior to employ when watermark overflows the content area.
            </summary>
            <returns>
            One of the <see cref="T:System.Windows.TextTrimming" /> values that specifies the text trimming behavior to employ. The default is <see cref="F:System.Windows.TextTrimming.None" />.
            </returns>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.SetWatermarkTrimming(System.Windows.DependencyObject,System.Windows.TextTrimming)">
            <summary>
            Sets the text trimming behavior to employ when watermark overflows the content area.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetWatermarkWrapping(System.Windows.DependencyObject)">
            <summary>
            Gets how the watermark should wrap text.
            </summary>
            <returns>One of the <see cref="T:System.Windows.TextWrapping" /> values. The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.
            </returns>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.SetWatermarkWrapping(System.Windows.DependencyObject,System.Windows.TextWrapping)">
            <summary>
            Sets how the watermark should wrap text.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetHasText(System.Windows.DependencyObject)">
            <summary>
            Gets if the attached TextBox has text.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetClearTextButton(System.Windows.DependencyObject)">
            <summary>
            Gets the clear text button visibility / feature. Can be used to enable text deletion.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.SetClearTextButton(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the clear text button visibility / feature. Can be used to enable text deletion.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetTextButton(System.Windows.DependencyObject)">
            <summary>
            Gets the text button visibility.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.SetTextButton(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the text button visibility.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetButtonsAlignment(System.Windows.DependencyObject)">
            <summary>
            Gets the buttons placement variant.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.SetButtonsAlignment(System.Windows.DependencyObject,MahApps.Metro.Controls.ButtonsAlignment)">
            <summary>
            Sets the buttons placement variant.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetIsClearTextButtonBehaviorEnabled(System.Windows.Controls.Button)">
            <summary>
            Gets the clear text button behavior.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.SetIsClearTextButtonBehaviorEnabled(System.Windows.Controls.Button,System.Boolean)">
            <summary>
            Sets the clear text button behavior.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TextBoxHelper.GetButtonContentTemplate(System.Windows.DependencyObject)">
            <summary> 
            ButtonContentTemplate is the template used to display the content of the ClearText button. 
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ToggleButtonHelper.ContentDirectionProperty">
            <summary>
            This property can be used to handle the style for CheckBox and RadioButton
            LeftToRight means content left and button right and RightToLeft vise versa
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.ToggleButtonHelper.GetContentDirection(System.Windows.UIElement)">
            <summary>
            This property can be used to handle the style for CheckBox and RadioButton
            LeftToRight means content left and button right and RightToLeft vise versa
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroAnimatedSingleRowTabControl">
            <summary>
            A MetroTabControl (Pivot) that wraps TabItem/MetroTabItem headers on a single row.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroAnimatedSingleRowTabControl.#ctor">
            <summary>
            Initializes a new instance of the MahApps.Metro.Controls.MetroAnimatedSingleRowTabControl class.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroAnimatedTabControl">
            <summary>
            A MetroTabControl (Pivot) that uses a TransitioningContentControl to animate the contents of a TabItem/MetroTabItem.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroAnimatedTabControl.#ctor">
            <summary>
            Initializes a new instance of the MahApps.Metro.Controls.MetroAnimatedTabControl class.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroContentControl">
            <summary>
            Originally from http://xamlcoder.com/blog/2010/11/04/creating-a-metro-ui-style-control/
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroHeader.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:System.Windows.UIElement.OnCreateAutomationPeer" />)
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroHeaderAutomationPeer">
            <summary>
            The MetroHeaderAutomationPeer class exposes the <see cref="T:MahApps.Metro.Controls.MetroHeader" /> type to UI Automation.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroNavigationWindow">
            <summary>
            A reimplementation of NavigationWindow based on MetroWindow.
            </summary>
            <see cref="T:System.Windows.Navigation.NavigationWindow"/>
            <summary>
            MetroNavigationWindow
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroNavigationWindow.ForwardStack">
            <summary>
            Gets an IEnumerable that you use to enumerate the entries in back navigation history for a NavigationWindow.
            </summary>
            <see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack"/>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroNavigationWindow.BackStack">
            <summary>
            Gets an IEnumerable that you use to enumerate the entries in back navigation history for a NavigationWindow.
            </summary>
            <see cref="P:System.Windows.Navigation.NavigationWindow.BackStack"/>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroNavigationWindow.NavigationService">
            <summary>
            Gets the NavigationService that is used by this MetroNavigationWindow to provide navigation services to its content.
            </summary>
            <see cref="P:System.Windows.Navigation.NavigationWindow.NavigationService"/>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroNavigationWindow.CanGoBack">
            <summary>
            Gets a value that indicates whether there is at least one entry in back navigation history.
            </summary>
            <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack"/>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroNavigationWindow.CanGoForward">
            <summary>
            Gets a value that indicates whether there is at least one entry in forward navigation history.
            </summary>
            <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward"/>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroNavigationWindow.System#Windows#Markup#IUriContext#BaseUri">
            <summary>
            Gets or sets the base uniform resource identifier (URI) of the current context.
            </summary>
            <see cref="P:System.Windows.Markup.IUriContext.BaseUri"/>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroNavigationWindow.Source">
            <summary>
            Gets or sets the uniform resource identifier (URI) of the current content, or the URI of new content that is currently being navigated to.  
            </summary>
            <see cref="P:System.Windows.Navigation.NavigationWindow.Source"/>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.AddBackEntry(System.Windows.Navigation.CustomContentState)">
            <summary>
            Adds an entry to back navigation history that contains a CustomContentState object.
            </summary>
            <param name="state">A CustomContentState object that represents application-defined state that is associated with a specific piece of content.</param>
            <see cref="M:System.Windows.Navigation.NavigationWindow.AddBackEntry(System.Windows.Navigation.CustomContentState)"/>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.RemoveBackEntry">
            <summary>
            Removes the most recent journal entry from back history.
            </summary>
            <returns>The most recent JournalEntry in back navigation history, if there is one.</returns>
            <see cref="M:System.Windows.Navigation.NavigationWindow.RemoveBackEntry"/>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.GoBack">
            <summary>
            Navigates to the most recent item in back navigation history.
            </summary>
            <see cref="M:System.Windows.Navigation.NavigationWindow.GoBack"/>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.GoForward">
            <summary>
            Navigates to the most recent item in forward navigation history.
            </summary>
            <see cref="M:System.Windows.Navigation.NavigationWindow.GoForward"/>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.Navigate(System.Object)">
            <summary>
            Navigates asynchronously to content that is contained by an object.
            </summary>
            <param name="content">An Object that contains the content to navigate to.</param>
            <returns>true if a navigation is not canceled; otherwise, false.</returns>
            <see cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object)"/>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.Navigate(System.Uri)">
            <summary>
            Navigates asynchronously to content that is specified by a uniform resource identifier (URI).
            </summary>
            <param name="source">A Uri object initialized with the URI for the desired content.</param>
            <returns>true if a navigation is not canceled; otherwise, false.</returns>
            <see cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri)"/>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.Navigate(System.Object,System.Object)">
            <summary>
            Navigates asynchronously to content that is contained by an object, and passes an object that contains data to be used for processing during navigation.
            </summary>
            <param name="content">An Object that contains the content to navigate to.</param>
            <param name="extraData">A Object that contains data to be used for processing during navigation.</param>
            <returns>true if a navigation is not canceled; otherwise, false.</returns>
            <see cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object,System.Object)"/>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.Navigate(System.Uri,System.Object)">
            <summary>
            Navigates asynchronously to source content located at a uniform resource identifier (URI), and pass an object that contains data to be used for processing during navigation.
            </summary>
            <param name="source">A Uri object initialized with the URI for the desired content.</param>
            <param name="extraData">A Object that contains data to be used for processing during navigation.</param>
            <returns>true if a navigation is not canceled; otherwise, false.</returns>
            <see cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri,System.Object)"/>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.StopLoading">
            <summary>
            Stops further downloading of content for the current navigation request.
            </summary>
            <see cref="M:System.Windows.Navigation.NavigationWindow.StopLoading"/>
        </member>
        <member name="E:MahApps.Metro.Controls.MetroNavigationWindow.FragmentNavigation">
            <summary>
            Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source XAML content has been loaded, if the desired fragment is in different content.
            </summary>
            <see cref="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation"/>
        </member>
        <member name="E:MahApps.Metro.Controls.MetroNavigationWindow.Navigating">
            <summary>
            Occurs when a new navigation is requested.
            </summary>
            <see cref="E:System.Windows.Navigation.NavigationWindow.Navigating"/>
        </member>
        <member name="E:MahApps.Metro.Controls.MetroNavigationWindow.NavigationFailed">
            <summary>
            Occurs when an error is raised while navigating to the requested content.
            </summary>
            <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationFailed"/>
        </member>
        <member name="E:MahApps.Metro.Controls.MetroNavigationWindow.NavigationProgress">
            <summary>
            Occurs periodically during a download to provide navigation progress information.
            </summary>
            <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress"/>
        </member>
        <member name="E:MahApps.Metro.Controls.MetroNavigationWindow.NavigationStopped">
            <summary>
            Occurs when the StopLoading method is called, or when a new navigation is requested while a current navigation is in progre
            </summary>
            <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationStopped"/>
        </member>
        <member name="E:MahApps.Metro.Controls.MetroNavigationWindow.Navigated">
            <summary>
            Occurs when the content that is being navigated to has been found, and is available from the PageContent property, although it may not have completed loading
            </summary>
            <see cref="E:System.Windows.Navigation.NavigationWindow.Navigated"/>
        </member>
        <member name="E:MahApps.Metro.Controls.MetroNavigationWindow.LoadCompleted">
            <summary>
            Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.
            </summary>
            <see cref="E:System.Windows.Navigation.NavigationWindow.LoadCompleted"/>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroNavigationWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroProgressBar">
            <summary>
            A metrofied ProgressBar.
            <see cref="T:System.Windows.Controls.ProgressBar"/>
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroProgressBar.EllipseDiameter">
            <summary>
            Gets/sets the diameter of the ellipses used in the indeterminate animation.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroProgressBar.EllipseOffset">
            <summary>
            Gets/sets the offset of the ellipses used in the indeterminate animation.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroTabControl">
            <summary>
            A standard MetroTabControl (Pivot).
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroTabControl.#ctor">
            <summary>
            Initializes a new instance of the MahApps.Metro.Controls.MetroTabControl class.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.BaseMetroTabControl">
            <summary>
            A base class for every MetroTabControl (Pivot).
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.BaseMetroTabControl.CloseTabCommand">
            <summary>
            Get/sets the command that executes when a MetroTabItem's close button is clicked.
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.BaseMetroTabControl.TabItemClosingEvent">
            <summary>
            An event that is raised when a TabItem is closed.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.BaseMetroTabControl.TabItemClosingEventArgs">
            <summary>
            Event args that is created when a TabItem is closed.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.BaseMetroTabControl.TabItemClosingEventArgs.ClosingTabItem">
            <summary>
            Gets the MetroTabItem that will be closed.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroTabItem">
            <summary>
            An extended TabItem with a metro style.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroTabItem.CloseButtonEnabled">
            <summary>
            Gets/sets whether the Close Button is visible.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroTabItem.CloseTabCommand">
            <summary>
            Gets/sets the command that is executed when the Close Button is clicked.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroTabItem.CloseTabCommandParameter">
            <summary>
            Gets/sets the command parameter which is passed to the close button command.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroTabItem.CloseButtonMargin">
            <summary>
            Gets/sets the Close Button Margin.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroThumbContentControl">
            <summary>
            The MetroThumbContentControl control can be used for titles or something else and enables basic drag movement functionality.
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.MetroThumbContentControl.DragStarted">
            <summary>
            Adds or remove a DragStartedEvent handler
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.MetroThumbContentControl.DragDelta">
            <summary>
            Adds or remove a DragDeltaEvent handler
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.MetroThumbContentControl.DragCompleted">
            <summary>
            Adds or remove a DragCompletedEvent handler
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MetroThumbContentControl.IsDraggingProperty">
            <summary>
            DependencyProperty for the IsDragging property.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroThumbContentControl.IsDragging">
            <summary>
            Indicates that the left mouse button is pressed and is over the MetroThumbContentControl.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroThumbContentControlAutomationPeer">
            <summary>
            The MetroThumbContentControlAutomationPeer class exposes the <see cref="T:MahApps.Metro.Controls.MetroThumbContentControl" /> type to UI Automation.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroWindow">
            <summary>
            An extended, metrofied Window class.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MetroWindow.IsAnyDialogOpenProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.MetroWindow.IsAnyDialogOpen"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MetroWindow.IsCloseButtonEnabledWithDialogProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.MetroWindow.IsCloseButtonEnabledWithDialog"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MetroWindow.OverlayFadeInProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.MetroWindow.OverlayFadeIn"/> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MetroWindow.OverlayFadeOutProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.MetroWindow.OverlayFadeOut"/> dependency property.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.OverrideDefaultWindowCommandsBrush">
            <summary>
            Allows easy handling of window commands brush. Theme is also applied based on this brush.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.WindowTransitionsEnabled">
            <summary>
            Gets/sets whether the window's entrance transition animation is enabled.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.Flyouts">
            <summary>
            Gets/sets the FlyoutsControl that hosts the window's flyouts.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IconTemplate">
            <summary>
            Gets/sets the icon content template to show a custom icon.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.TitleTemplate">
            <summary>
            Gets/sets the title content template to show a custom title.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.LeftWindowCommands">
            <summary>
            Gets/sets the left window commands that hosts the user commands.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.RightWindowCommands">
            <summary>
            Gets/sets the right window commands that hosts the user commands.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.WindowButtonCommands">
            <summary>
            Gets/sets the window button commands that hosts the min/max/close commands.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IgnoreTaskbarOnMaximize">
            <summary>
            Gets/sets whether the window will ignore (and overlap) the taskbar when maximized.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ResizeBorderThickness">
            <summary>
            Gets or sets resize border thickness
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.MetroWindow.ResizeBorderThicknessProperty">
            <summary>
            Using a DependencyProperty as the backing store for ResizeBorderTickness.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.TitleForeground">
            <summary>
            Gets/sets the brush used for the titlebar's foreground.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.SaveWindowPosition">
            <summary>
            Gets/sets whether the window will save it's position between loads.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.GetWindowPlacementSettings">
            <summary>
            Gets the window placement settings (can be overwritten).
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ShowIconOnTitleBar">
            <summary>
            Get/sets whether the titlebar icon is visible or not.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ShowDialogsOverTitleBar">
            <summary>
            Get/sets whether dialogs show over the title bar.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IsAnyDialogOpen">
            <summary>
            Gets whether one or more dialogs are shown.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IconEdgeMode">
            <summary>
            Gets/sets edge mode of the titlebar icon.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IconBitmapScalingMode">
            <summary>
            Gets/sets bitmap scaling mode of the titlebar icon.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IconScalingMode">
            <summary>
            Gets/sets icon scaling mode of the titlebar.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ShowTitleBar">
            <summary>
            Gets/sets whether the TitleBar is visible or not.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.UseNoneWindowStyle">
            <summary>
            Gets/sets whether the WindowStyle is None or not.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ShowMinButton">
            <summary>
            Gets/sets if the minimize button is visible.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ShowMaxRestoreButton">
            <summary>
            Gets/sets if the Maximize/Restore button is visible.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ShowCloseButton">
            <summary>
            Gets/sets if the close button is visible.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IsMinButtonEnabled">
            <summary>
            Gets/sets if the min button is enabled.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IsMaxRestoreButtonEnabled">
            <summary>
            Gets/sets if the max/restore button is enabled.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IsCloseButtonEnabled">
            <summary>
            Gets/sets if the close button is enabled.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.IsCloseButtonEnabledWithDialog">
            <summary>
            Gets or sets whether if the close button should be enabled or not if a dialog is shown.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.ShowSystemMenuOnRightClick">
            <summary>
            Gets/sets if the the system menu should popup on right click.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.TitlebarHeight">
            <summary>
            Gets/sets the TitleBar's height.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.TitleCaps">
            <summary>
            Gets/sets if the TitleBar's text is automatically capitalized.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.TitleCharacterCasing">
            <summary>
            Character casing of the title
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.TitleAlignment">
            <summary>
            Gets/sets the title horizontal alignment.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.WindowTitleBrush">
            <summary>
            Gets/sets the brush used for the Window's title bar.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.GlowBrush">
            <summary>
            Gets/sets the brush used for the Window's glow.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.NonActiveGlowBrush">
            <summary>
            Gets/sets the brush used for the Window's non-active glow.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.NonActiveBorderBrush">
            <summary>
            Gets/sets the brush used for the Window's non-active border.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.NonActiveWindowTitleBrush">
            <summary>
            Gets/sets the brush used for the Window's non-active title bar.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.OverlayBrush">
            <summary>
            Gets/sets the brush used for the dialog overlay.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.OverlayOpacity">
            <summary>
            Gets/sets the opacity used for the dialog overlay.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.OverlayFadeIn">
            <summary>
            Gets or sets the overlay fade in storyboard.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.MetroWindow.OverlayFadeOut">
            <summary>
            Gets or sets the overlay fade out storyboard.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.ShowOverlayAsync">
            <summary>
            Begins to show the MetroWindow's overlay effect.
            </summary>
            <returns>A task representing the process.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.HideOverlayAsync">
            <summary>
            Begins to hide the MetroWindow's overlay effect.
            </summary>
            <returns>A task representing the process.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.StoreFocus(System.Windows.IInputElement)">
            <summary>
            Stores the given element, or the last focused element via FocusManager, for restoring the focus after closing a dialog.
            </summary>
            <param name="thisElement">The element which will be focused again.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.ResetStoredFocus">
            <summary>
            Clears the stored element which would get the focus after closing a dialog.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.#ctor">
            <summary>
            Initializes a new instance of the MahApps.Metro.Controls.MetroWindow class.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.InitializeStylizedBehaviors">
            <summary>
            Initializes various behaviors for the window.
            For example <see cref="T:MahApps.Metro.Behaviours.BorderlessWindowBehavior"/>, <see cref="T:MahApps.Metro.Behaviours.WindowsSettingBehaviour"/> and <see cref="T:MahApps.Metro.Behaviours.GlowWindowBehavior"/>.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.GetPart``1(System.String)">
            <summary>
            Gets the template child with the given name.
            </summary>
            <typeparam name="T">The interface type inheirted from DependencyObject.</typeparam>
            <param name="name">The name of the template child.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindow.GetPart(System.String)">
            <summary>
            Gets the template child with the given name.
            </summary>
            <param name="name">The name of the template child.</param>
        </member>
        <member name="T:MahApps.Metro.Controls.MetroWindowHelpers">
            <summary>
            This class eats little children.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindowHelpers.SetIsHitTestVisibleInChromeProperty``1(MahApps.Metro.Controls.MetroWindow,System.String,System.Boolean)">
            <summary>
            Sets the IsHitTestVisibleInChromeProperty to a MetroWindow template child
            </summary>
            <param name="window">The MetroWindow.</param>
            <param name="name">The name of the template child.</param>
            <param name="hitTestVisible"></param>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindowHelpers.SetWindowChromeResizeGripDirection(MahApps.Metro.Controls.MetroWindow,System.String,ControlzEx.Windows.Shell.ResizeGripDirection)">
            <summary>
            Sets the WindowChrome ResizeGripDirection to a MetroWindow template child.
            </summary>
            <param name="window">The MetroWindow.</param>
            <param name="name">The name of the template child.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.MetroWindowHelpers.HandleWindowCommandsForFlyouts(MahApps.Metro.Controls.MetroWindow,System.Collections.Generic.IEnumerable{MahApps.Metro.Controls.Flyout},System.Windows.Media.Brush)">
            <summary>
            Adapts the WindowCommands to the theme of the first opened, topmost &amp;&amp; (top || right || left) flyout
            </summary>
            <param name="window">The MetroWindow</param>
            <param name="flyouts">All the flyouts! Or flyouts that fall into the category described in the summary.</param>
            <param name="resetBrush">An optional brush to reset the window commands brush to.</param>
        </member>
        <member name="T:MahApps.Metro.Controls.NumericInput">
            <summary>
            Enum NumericInput which indicates what input is allowed for NumericUpdDown.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.NumericInput.Numbers">
            <summary>
            Only numbers are allowed
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.NumericInput.Decimal">
            <summary>
            Numbers with decimal point and allowed scientific input
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.NumericInput.All">
            <summary>
            All is allowed
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.NumericUpDown">
            <summary>
                Represents a Windows spin box (also known as an up-down control) that displays numeric values.
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.NumericUpDown.MaximumReached">
            <summary>
                Event fired from this NumericUpDown when its value has reached the maximum value
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.NumericUpDown.MinimumReached">
            <summary>
                Event fired from this NumericUpDown when its value has reached the minimum value
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.Delay">
            <summary>
                Gets or sets the amount of time, in milliseconds, the NumericUpDown waits while the up/down button is pressed
                before it starts increasing/decreasing the
                <see cref="P:MahApps.Metro.Controls.NumericUpDown.Value" /> for the specified <see cref="P:MahApps.Metro.Controls.NumericUpDown.Interval" /> . The value must be
                non-negative.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.InterceptArrowKeys">
            <summary>
                Gets or sets a value indicating whether the user can use the arrow keys <see cref="F:System.Windows.Input.Key.Up"/> and <see cref="F:System.Windows.Input.Key.Down"/> to change values. 
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.InterceptMouseWheel">
            <summary>
                Gets or sets a value indicating whether the user can use the mouse wheel to change values.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.TrackMouseWheelWhenMouseOver">
            <summary>
                Gets or sets a value indicating whether the control must have the focus in order to change values using the mouse wheel.
            <remarks>
                If the value is true then the value changes when the mouse wheel is over the control. If the value is false then the value changes only if the control has the focus. If <see cref="P:MahApps.Metro.Controls.NumericUpDown.InterceptMouseWheel"/> is set to "false" then this property has no effect.
            </remarks>
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.InterceptManualEnter">
            <summary>
                Gets or sets a value indicating whether the user can enter text in the control.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.Culture">
            <summary>
                Gets or sets a value indicating the culture to be used in string formatting operations.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.HideUpDownButtons">
            <summary>
                Gets or sets a value indicating whether the +/- button of the control is visible.
            </summary>
            <remarks>
                If the value is false then the <see cref="P:MahApps.Metro.Controls.NumericUpDown.Value" /> of the control can be changed only if one of the following cases is satisfied:
                <list type="bullet">
                    <item>
                        <description><see cref="P:MahApps.Metro.Controls.NumericUpDown.InterceptArrowKeys" /> is true.</description>
                    </item>
                    <item>
                        <description><see cref="P:MahApps.Metro.Controls.NumericUpDown.InterceptMouseWheel" /> is true.</description>
                    </item>
                    <item>
                        <description><see cref="P:MahApps.Metro.Controls.NumericUpDown.InterceptManualEnter" /> is true.</description>
                    </item>
                </list>
            </remarks>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.IsReadOnly">
            <summary>
                Gets or sets a value indicating whether the text can be changed by the use of the up or down buttons only.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.Speedup">
            <summary>
                Gets or sets a value indicating whether the value to be added to or subtracted from <see cref="P:MahApps.Metro.Controls.NumericUpDown.Value" /> remains
                always
                <see cref="P:MahApps.Metro.Controls.NumericUpDown.Interval" /> or if it will increase faster after pressing the up/down button/arrow some time.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.StringFormat">
            <summary>
                Gets or sets the formatting for the displaying <see cref="P:MahApps.Metro.Controls.NumericUpDown.Value" />
            </summary>
            <remarks>
                <see href="http://msdn.microsoft.com/en-us/library/dwhawy9k.aspx"></see>
            </remarks>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.TextAlignment">
            <summary>
                Gets or sets the horizontal alignment of the contents of the text box.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.HasDecimals">
            <summary>
                Indicates if the NumericUpDown should show the decimal separator or not.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.NumericInputMode">
            <summary>
            Gets or sets which numeric input for the NumericUpDown is allowed.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.NumericUpDown.SnapToMultipleOfInterval">
            <summary>
                Indicates if the NumericUpDown should round the value to the nearest possible interval when the focus moves to another element.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.NumericUpDown.OnGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary> 
                Called when this element or any below gets focus.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.NumericUpDown.OnApplyTemplate">
            <summary>
                When overridden in a derived class, is invoked whenever application code or internal processes call
                <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.NumericUpDown.OnValueChanged(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
                Raises the <see cref="E:MahApps.Metro.Controls.NumericUpDown.ValueChanged" /> routed event.
            </summary>
            <param name="oldValue">
                Old value of the <see cref="P:MahApps.Metro.Controls.NumericUpDown.Value" /> property
            </param>
            <param name="newValue">
                New value of the <see cref="P:MahApps.Metro.Controls.NumericUpDown.Value" /> property
            </param>
        </member>
        <member name="T:MahApps.Metro.Controls.Planerator">
            <summary>
              Based on Greg Schechter's Planerator
              http://blogs.msdn.com/b/greg_schechter/archive/2007/10/26/enter-the-planerator-dead-simple-3d-in-wpf-with-a-stupid-name.aspx
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Position">
            <summary>
            An Enum representing different positions, such as Left or Right.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.RangeSelectionChangedEventArgs">
            <summary>
            Event arguments created for the RangeSlider's SelectionChanged event.
            <see cref="T:MahApps.Metro.Controls.RangeSlider"/>
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSelectionChangedEventArgs.NewLowerValue">
            <summary>
            The value of the new range's beginning.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSelectionChangedEventArgs.NewUpperValue">
            <summary>
            The value of the new range's ending.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.RangeSlider">
            <summary>
            A slider control with the ability to select a range between two values.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.RangeSlider.TickPlacementProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.RangeSlider.TickPlacement" /> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.RangeSlider.TickFrequencyProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.RangeSlider.TickFrequency" /> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.RangeSlider.TicksProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.RangeSlider.Ticks" /> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.RangeSlider.IsSelectionRangeEnabledProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.RangeSlider.IsSelectionRangeEnabled" /> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.RangeSlider.SelectionStartProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.RangeSlider.SelectionStart" /> dependency property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.RangeSlider.SelectionEndProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.RangeSlider.SelectionEnd" /> dependency property.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.Interval">
            <summary>
            Get/sets value how fast thumbs will move when user press on left/right/central with left mouse button (IsMoveToPoint must be set to FALSE)
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.AutoToolTipPrecision">
            <summary>
            Get/sets precision of the value, which displaying inside AutotToolTip
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.AutoToolTipTextConverter">
            <summary>
            Get/sets the converter for the tooltip text
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.AutoToolTipPlacement">
            <summary>
            Get/sets tooltip, which will show while dragging thumbs and display currect value
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.TickPlacement">
            <summary>
            Gets or sets the position of tick marks with respect to the <see cref="T:System.Windows.Controls.Primitives.Track" /> of the <see cref="T:MahApps.Metro.Controls.RangeSlider" />.
            </summary>
            <returns>
            A <see cref="P:System.Windows.Controls.Slider.TickPlacement" /> value that defines how to position the tick marks in a <see cref="T:MahApps.Metro.Controls.RangeSlider" /> with respect to the slider bar. The default is <see cref="F:System.Windows.Controls.Primitives.TickPlacement.None" />.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.TickFrequency">
            <summary>
            Gets or sets the interval between tick marks.
            </summary>
            <returns>
            The distance between tick marks. The default is (1.0).
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.Ticks">
            <summary>
            Gets or sets the positions of the tick marks to display for a <see cref="T:MahApps.Metro.Controls.RangeSlider" />. </summary>
            <returns>
            A set of tick marks to display for a <see cref="T:MahApps.Metro.Controls.RangeSlider" />. The default is <see langword="null" />.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.IsMoveToPointEnabled">
            <summary>
            Get or sets IsMoveToPoint feature which will enable/disable moving to exact point inside control when user clicked on it
            Gets or sets a value that indicates whether the two <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> of a <see cref="T:MahApps.Metro.Controls.RangeSlider" /> moves immediately to the location of the mouse click that occurs while the mouse pointer pauses on the <see cref="T:MahApps.Metro.Controls.RangeSlider" /> tracks.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.Orientation">
            <summary>
            Gets or sets the orientation of the <see cref="T:MahApps.Metro.Controls.RangeSlider" />.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.IsSnapToTickEnabled">
            <summary>
            Get/sets whether possibility to make manipulations inside range with left/right mouse buttons + cotrol button
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.ExtendedMode">
            <summary>
            Get/sets whether possibility to make manipulations inside range with left/right mouse buttons + cotrol button
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.MoveWholeRange">
            <summary>
            Get/sets whether whole range will be moved when press on right/left/central part of control
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.MinRangeWidth">
            <summary>
            Get/sets the minimal distance between two thumbs.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.LowerValue">
            <summary>
            Get/sets the beginning of the range selection.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.UpperValue">
            <summary>
            Get/sets the end of the range selection.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.MinRange">
            <summary>
            Get/sets the minimum range that can be selected.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.IsSelectionRangeEnabled">
            <summary>
            Gets or sets a value that indicates whether the <see cref="T:MahApps.Metro.Controls.RangeSlider" /> displays a selection range along the <see cref="T:MahApps.Metro.Controls.RangeSlider" />.
            </summary>
            <returns>
            <see langword="true" /> if a selection range is displayed; otherwise, <see langword="false" />. The default is <see langword="false" />.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.SelectionStart">
            <summary>
            Gets or sets the smallest value of a specified selection for a <see cref="T:MahApps.Metro.Controls.RangeSlider" />.
            </summary>
            <returns>
            The largest value of a selected range of values of a <see cref="T:MahApps.Metro.Controls.RangeSlider" />. The default is zero (0.0).
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.RangeSlider.SelectionEnd">
            <summary>
            Gets or sets the largest value of a specified selection for a <see cref="T:MahApps.Metro.Controls.RangeSlider" />.
            </summary>
            <returns>
            The largest value of a selected range of values of a <see cref="T:MahApps.Metro.Controls.RangeSlider" />. The default is zero (0.0).
            </returns>
        </member>
        <member name="M:MahApps.Metro.Controls.RangeSlider.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Responds to a change in the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.
            </summary>
            <param name="oldMinimum">The old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.</param><param name="newMinimum">The new value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.RangeSlider.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Responds to a change in the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.
            </summary>
            <param name="oldMaximum">The old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.</param><param name="newMaximum">The new value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.</param>
        </member>
        <member name="T:MahApps.Metro.Controls.RevealImage">
            <summary>
            RevealImage
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.RevealImage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.CommandParameter">
            <summary>
            Reflects the parameter to pass to the CommandProperty upon execution. 
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.CommandTarget">
            <summary>
            Gets or sets the target element on which to fire the command.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.Command">
            <summary>
            Get or sets the Command property. 
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.IsExpanded">
            <summary> 
            Indicates whether the Popup is visible. 
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.ExtraTag">
            <summary>
            Gets or sets an extra tag.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.Orientation">
            <summary>
            Gets or sets the dimension of children stacking.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.Icon">
            <summary>
             Gets or sets the Content used to generate the icon part.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.IconTemplate">
            <summary> 
            Gets or sets the ContentTemplate used to display the content of the icon part. 
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.ButtonStyle">
            <summary>
            Gets/sets the button style.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.ButtonArrowStyle">
            <summary>
            Gets/sets the button arrow style.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.ListBoxStyle">
            <summary>
            Gets/sets the popup listbox style.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.ArrowBrush">
            <summary>
            Gets/sets the brush of the button arrow icon.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.ArrowMouseOverBrush">
            <summary>
            Gets/sets the brush of the button arrow icon if the mouse is over the split button.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitButton.ArrowPressedBrush">
            <summary>
            Gets/sets the brush of the button arrow icon if the arrow button is pressed.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.SplitButton.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>Updates the current selection when an item in the <see cref="T:System.Windows.Controls.Primitives.Selector" /> has changed</summary>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MahApps.Metro.Controls.GridLengthAnimation">
            <summary>
                A special animation used to animates the length of a <see cref="T:System.Windows.Controls.Grid" />.
            </summary>
            <seealso cref="T:System.Windows.Media.Animation.AnimationTimeline" />
            <autogeneratedoc />
        </member>
        <member name="T:MahApps.Metro.Controls.SplitView">
            <summary>
                Represents a container with two views; one view for the main content and another view that is typically used for
                navigation commands.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitView.CompactPaneLengthProperty">
            <summary>
                Identifies the <see cref="P:MahApps.Metro.Controls.SplitView.CompactPaneLength" /> dependency property.
            </summary>
            <returns>The identifier for the <see cref="P:MahApps.Metro.Controls.SplitView.CompactPaneLength" /> property.</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitView.CompactPaneLength">
            <summary>
                Gets or sets the width of the <see cref="T:MahApps.Metro.Controls.SplitView" /> pane in its compact display mode.
            </summary>
            <returns>
                The width of the pane in it's compact display mode. The default is 48 device-independent pixel (DIP) (defined
                by the SplitViewCompactPaneThemeLength resource).
            </returns>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitView.ContentProperty">
            <summary>
                Identifies the <see cref="P:MahApps.Metro.Controls.SplitView.Content" /> dependency property.
            </summary>
            <returns>The identifier for the <see cref="P:MahApps.Metro.Controls.SplitView.Content" /> dependency property.</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitView.Content">
            <summary>
                Gets or sets the contents of the main panel of a <see cref="T:MahApps.Metro.Controls.SplitView" />.
            </summary>
            <returns>The contents of the main panel of a <see cref="T:MahApps.Metro.Controls.SplitView" />. The default is null.</returns>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitView.DisplayModeProperty">
            <summary>
                Identifies the <see cref="P:MahApps.Metro.Controls.SplitView.DisplayMode" /> dependency property.
            </summary>
            <returns>The identifier for the <see cref="P:MahApps.Metro.Controls.SplitView.DisplayMode" /> dependency property.</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitView.DisplayMode">
            <summary>
                Gets of sets a value that specifies how the pane and content areas of a <see cref="T:MahApps.Metro.Controls.SplitView" /> are shown.
            </summary>
            <returns>
                A value of the enumeration that specifies how the pane and content areas of a <see cref="T:MahApps.Metro.Controls.SplitView" /> are
                shown. The default is <see cref="F:MahApps.Metro.Controls.SplitViewDisplayMode.Overlay" />.
            </returns>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitView.IsPaneOpenProperty">
            <summary>
                Identifies the <see cref="P:MahApps.Metro.Controls.SplitView.IsPaneOpen" /> dependency property.
            </summary>
            <returns>The identifier for the <see cref="P:MahApps.Metro.Controls.SplitView.IsPaneOpen" /> dependency property.</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitView.IsPaneOpen">
            <summary>
                Gets or sets a value that specifies whether the <see cref="T:MahApps.Metro.Controls.SplitView" /> pane is expanded to its full width.
            </summary>
            <returns>true if the pane is expanded to its full width; otherwise, false. The default is true.</returns>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitView.OpenPaneLengthProperty">
            <summary>
                Identifies the <see cref="P:MahApps.Metro.Controls.SplitView.OpenPaneLength" /> dependency property.
            </summary>
            <returns>The identifier for the <see cref="P:MahApps.Metro.Controls.SplitView.OpenPaneLength" /> dependency property.</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitView.OpenPaneLength">
            <summary>
                Gets or sets the width of the <see cref="T:MahApps.Metro.Controls.SplitView" /> pane when it's fully expanded.
            </summary>
            <returns>
                The width of the <see cref="T:MahApps.Metro.Controls.SplitView" /> pane when it's fully expanded. The default is 320 device-independent
                pixel (DIP).
            </returns>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitView.PaneProperty">
            <summary>
                Identifies the <see cref="P:MahApps.Metro.Controls.SplitView.Pane" /> dependency property.
            </summary>
            <returns>The identifier for the <see cref="P:MahApps.Metro.Controls.SplitView.Pane" /> dependency property.</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitView.Pane">
            <summary>
                Gets or sets the contents of the pane of a <see cref="T:MahApps.Metro.Controls.SplitView" />.
            </summary>
            <returns>The contents of the pane of a <see cref="T:MahApps.Metro.Controls.SplitView" />. The default is null.</returns>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitView.PaneBackgroundProperty">
            <summary>
                Identifies the <see cref="P:MahApps.Metro.Controls.SplitView.PaneBackground" /> dependency property.
            </summary>
            <returns>The identifier for the <see cref="P:MahApps.Metro.Controls.SplitView.PaneBackground" /> dependency property.</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitView.PaneBackground">
            <summary>
                Gets or sets the Brush to apply to the background of the <see cref="P:MahApps.Metro.Controls.SplitView.Pane" /> area of the control.
            </summary>
            <returns>The Brush to apply to the background of the <see cref="P:MahApps.Metro.Controls.SplitView.Pane" /> area of the control.</returns>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitView.PaneForegroundProperty">
            <summary>
                Identifies the <see cref="P:MahApps.Metro.Controls.SplitView.PaneForeground" /> dependency property.
            </summary>
            <returns>The identifier for the <see cref="P:MahApps.Metro.Controls.SplitView.PaneForeground" /> dependency property.</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitView.PaneForeground">
            <summary>
                Gets or sets the Brush to apply to the foreground of the <see cref="P:MahApps.Metro.Controls.SplitView.Pane" /> area of the control.
            </summary>
            <returns>The Brush to apply to the background of the <see cref="P:MahApps.Metro.Controls.SplitView.Pane" /> area of the control.</returns>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitView.PanePlacementProperty">
            <summary>
                Identifies the PanePlacement dependency property.
            </summary>
            <returns>The identifier for the PanePlacement dependency property.</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitView.PanePlacement">
            <summary>
                Gets or sets a value that specifies whether the pane is shown on the right or left side of the
                <see cref="T:MahApps.Metro.Controls.SplitView" />.
            </summary>
            <returns>
                A value of the enumeration that specifies whether the pane is shown on the right or left side of the
                <see cref="T:MahApps.Metro.Controls.SplitView" />. The default is <see cref="F:MahApps.Metro.Controls.SplitViewPanePlacement.Left" />.
            </returns>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitView.TemplateSettingsProperty">
            <summary>
                Identifies the <see cref="P:MahApps.Metro.Controls.SplitView.TemplateSettings" /> dependency property.
            </summary>
            <returns>The identifier for the <see cref="P:MahApps.Metro.Controls.SplitView.TemplateSettings" /> dependency property.</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitView.TemplateSettings">
            <summary>
                Gets an object that provides calculated values that can be referenced as TemplateBinding sources when defining
                templates for a <see cref="T:MahApps.Metro.Controls.SplitView" /> control.
            </summary>
            <returns>An object that provides calculated values for templates.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.SplitView.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:MahApps.Metro.Controls.SplitView" /> class.
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.SplitView.PaneClosed">
            <summary>
                Occurs when the <see cref="T:MahApps.Metro.Controls.SplitView" /> pane is closed.
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.SplitView.PaneClosing">
            <summary>
                Occurs when the <see cref="T:MahApps.Metro.Controls.SplitView" /> pane is closing.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.SplitViewDisplayMode">
            <summary>
                Constants that specify how the pane is shown in a <see cref="T:MahApps.Metro.Controls.SplitView" />.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitViewDisplayMode.Overlay">
            <summary>
                The pane covers the content when it's open and does not take up space in the control layout.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitViewDisplayMode.Inline">
            <summary>
                The pane is shown side-by-side with the content and takes up space in the control layout.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitViewDisplayMode.CompactOverlay">
            <summary>
                The amount of the pane defined by the <see cref="P:MahApps.Metro.Controls.SplitView.CompactPaneLength" /> property is shown side-by-side
                with the content and takes up space in the control layout.
                The remaining part of the pane covers the content when it's open and does not take up space in the control layout.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitViewDisplayMode.CompactInline">
            <summary>
                The amount of the pane defined by the <see cref="P:MahApps.Metro.Controls.SplitView.CompactPaneLength" /> property is shown side-by-side
                with the content and takes up space in the control layout.
                The remaining part of the pane pushes the content to the side when it's open and takes up space in the control
                layout.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.SplitViewPaneClosingEventArgs">
            <summary>
                Provides event data for the <see cref="E:MahApps.Metro.Controls.SplitView.PaneClosing" /> event.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitViewPaneClosingEventArgs.Cancel">
            <summary>
                Gets or sets a value that indicates whether the pane closing action should be canceled.
            </summary>
            <returns>true to cancel the pane closing action; otherwise, false.</returns>
        </member>
        <member name="T:MahApps.Metro.Controls.SplitViewPanePlacement">
            <summary>
                Constants that specify whether the pane is set to the left or to the right of the content in a
                <see cref="T:MahApps.Metro.Controls.SplitView" />.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitViewPanePlacement.Left">
            <summary>
                The pane is shown to the left of the <see cref="T:MahApps.Metro.Controls.SplitView" /> content.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.SplitViewPanePlacement.Right">
            <summary>
                The pane is shown to the right of the <see cref="T:MahApps.Metro.Controls.SplitView" /> content.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.SplitViewTemplateSettings">
            <summary>
                Provides calculated values that can be referenced as TemplatedParent sources when defining templates for a
                <see cref="T:MahApps.Metro.Controls.SplitView" />.
                Not intended for general use.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitViewTemplateSettings.CompactPaneGridLength">
            <summary>
                Gets the <see cref="P:MahApps.Metro.Controls.SplitView.CompactPaneLength" /> value as a GridLength.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitViewTemplateSettings.NegativeOpenPaneLength">
            <summary>
                Gets the negative of the <see cref="P:MahApps.Metro.Controls.SplitView.OpenPaneLength" /> value.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitViewTemplateSettings.NegativeOpenPaneLengthMinusCompactLength">
            <summary>
                Gets the negative of the value calculated by subtracting the <see cref="P:MahApps.Metro.Controls.SplitView.CompactPaneLength" /> value from
                the <see cref="P:MahApps.Metro.Controls.SplitView.OpenPaneLength" /> value.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitViewTemplateSettings.OpenPaneGridLength">
            <summary>
                Gets the <see cref="P:MahApps.Metro.Controls.SplitView.OpenPaneLength" /> value as a GridLength.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitViewTemplateSettings.OpenPaneLength">
            <summary>
                Gets the <see cref="P:MahApps.Metro.Controls.SplitView.OpenPaneLength" /> value.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.SplitViewTemplateSettings.OpenPaneLengthMinusCompactLength">
            <summary>
                Gets a value calculated by subtracting the <see cref="P:MahApps.Metro.Controls.SplitView.CompactPaneLength" /> value from the
                <see cref="P:MahApps.Metro.Controls.SplitView.OpenPaneLength" /> value.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.Theme">
            <summary>
            An Enum representing different themes for window commands.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.Tile.HorizontalTitleAlignmentProperty">
            <summary> 
            HorizontalTitleAlignment Dependency Property.
            Default Value: HorizontalAlignment.Left
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.Tile.HorizontalTitleAlignment">
            <summary> 
            Gets/Sets the horizontal alignment of the title.
            </summary> 
        </member>
        <member name="F:MahApps.Metro.Controls.Tile.VerticalTitleAlignmentProperty">
            <summary>
            VerticalTitleAlignment Dependency Property. 
            Default Value: VerticalAlignment.Bottom
            </summary> 
        </member>
        <member name="P:MahApps.Metro.Controls.Tile.VerticalTitleAlignment">
            <summary>
            Gets/Sets the vertical alignment of the title.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.DateTimePicker">
            <summary>
                Represents a control that allows the user to select a date and a time.
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.DateTimePicker.SelectedDateChanged">
            <summary>
                Occurs when the <see cref="P:MahApps.Metro.Controls.DateTimePicker.SelectedDate" /> property is changed.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.DisplayDate">
            <summary>
                Gets or sets the date to display
            </summary>
            <returns>
                The date to display. The default is <see cref="P:System.DateTime.Today" />.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.DisplayDateEnd">
            <summary>
                Gets or sets the last date to be displayed.
            </summary>
            <returns>The last date to display.</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.DisplayDateStart">
            <summary>
                Gets or sets the first date to be displayed.
            </summary>
            <returns>The first date to display.</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.FirstDayOfWeek">
            <summary>
                Gets or sets the day that is considered the beginning of the week.
            </summary>
            <returns>
                A <see cref="T:System.DayOfWeek" /> that represents the beginning of the week. The default is the
                <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> that is determined by the current culture.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.SelectedDateFormat">
            <summary>
            Gets or sets the format that is used to display the selected date.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.IsTodayHighlighted">
            <summary>
                Gets or sets a value that indicates whether the current date will be highlighted.
            </summary>
            <returns>true if the current date is highlighted; otherwise, false. The default is true. </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.Orientation">
            <summary>
                Gets or sets a value that indicates the dimension by which calendar and clock are stacked.
            </summary>
            <returns>
                The <see cref="T:System.Windows.Controls.Orientation" /> of the calendar and clock. The default is
                <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.DateTimePicker.SelectedDate">
            <summary>
                Gets or sets the currently selected date.
            </summary>
            <returns>
                The date currently selected. The default is null.
            </returns>
        </member>
        <member name="T:MahApps.Metro.Controls.TimePartVisibility">
            <summary>
            Defines the visibility for time-parts that are visible for the <see cref="T:MahApps.Metro.Controls.DateTimePicker"/>. 
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.TimePicker">
            <summary>
                Represents a control that allows the user to select a time.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.TimePickerBase">
            <summary>
                Represents a base-class for time picking.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TimePickerBase.IsDatePickerVisiblePropertyKey">
            <summary>
            This readonly dependency property is to control whether to show the date-picker (in case of <see cref="T:MahApps.Metro.Controls.DateTimePicker"/>) or hide it (in case of <see cref="T:MahApps.Metro.Controls.TimePicker"/>.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TimePickerBase.MinTimeOfDay">
            <summary>
            Represents the time 00:00:00; 12:00:00 AM respectively
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TimePickerBase.MaxTimeOfDay">
            <summary>
            Represents the time 23:59:59.9999999; 11:59:59.9999999 PM respectively
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TimePickerBase.IntervalOf5">
            <summary>
            This list contains values from 0 to 55 with an interval of 5. It can be used to bind to <see cref="P:MahApps.Metro.Controls.TimePickerBase.SourceMinutes"/> and <see cref="P:MahApps.Metro.Controls.TimePickerBase.SourceSeconds"/>.
            </summary>
            <example>
            <code>&lt;MahApps:TimePicker SourceSeconds="{x:Static MahApps:TimePickerBase.IntervalOf5}" /&gt;</code>
            <code>&lt;MahApps:DateTimePicker SourceSeconds="{x:Static MahApps:TimePickerBase.IntervalOf5}" /&gt;</code>
            </example>
            <returns>
            Returns a list containing {0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55}.
            </returns>
        </member>
        <member name="F:MahApps.Metro.Controls.TimePickerBase.IntervalOf10">
            <summary>
            This list contains values from 0 to 50 with an interval of 10. It can be used to bind to <see cref="P:MahApps.Metro.Controls.TimePickerBase.SourceMinutes"/> and <see cref="P:MahApps.Metro.Controls.TimePickerBase.SourceSeconds"/>.
            </summary>
            <example>
            <code>&lt;MahApps:TimePicker SourceSeconds="{x:Static MahApps:TimePickerBase.IntervalOf10}" /&gt;</code>
            <code>&lt;MahApps:DateTimePicker SourceSeconds="{x:Static MahApps:TimePickerBase.IntervalOf10}" /&gt;</code>
            </example>
            <returns>
            Returns a list containing {0, 10, 20, 30, 40, 50}.
            </returns>
        </member>
        <member name="F:MahApps.Metro.Controls.TimePickerBase.IntervalOf15">
            <summary>
            This list contains values from 0 to 45 with an interval of 15. It can be used to bind to <see cref="P:MahApps.Metro.Controls.TimePickerBase.SourceMinutes"/> and <see cref="P:MahApps.Metro.Controls.TimePickerBase.SourceSeconds"/>.
            </summary>
            <example>
            <code>&lt;MahApps:TimePicker SourceSeconds="{x:Static MahApps:TimePickerBase.IntervalOf15}" /&gt;</code>
            <code>&lt;MahApps:DateTimePicker SourceSeconds="{x:Static MahApps:TimePickerBase.IntervalOf15}" /&gt;</code>
            </example>
            <returns>
            Returns a list containing {0, 15, 30, 45}.
            </returns>
        </member>
        <member name="E:MahApps.Metro.Controls.TimePickerBase.SelectedTimeChanged">
            <summary>
                Occurs when the <see cref="P:MahApps.Metro.Controls.TimePickerBase.SelectedTime" /> property is changed.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.Culture">
            <summary>
                Gets or sets a value indicating the culture to be used in string formatting operations.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.HandVisibility">
            <summary>
                Gets or sets a value indicating the visibility of the clock hands in the user interface (UI).
            </summary>
            <returns>
                The visibility definition of the clock hands. The default is <see cref="F:MahApps.Metro.Controls.TimePartVisibility.All" />.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.IsDatePickerVisible">
            <summary>
            Gets or sets a value indicating whether the date can be selected or not. This property is read-only.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.IsClockVisible">
            <summary>
                Gets or sets a value indicating whether the clock of this control is visible in the user interface (UI). This is a
                dependency property.
            </summary>
            <remarks>
                If this value is set to false then <see cref="T:System.Windows.Controls.Orientation" /> is set to
                <see cref="F:System.Windows.Controls.Orientation.Vertical" />
            </remarks>
            <returns>
                true if the clock is visible; otherwise, false. The default value is true.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.IsDropDownOpen">
            <summary>
                Gets or sets a value indicating whether the drop-down for a <see cref="T:MahApps.Metro.Controls.TimePickerBase"/> box is currently
                    open.
            </summary>
            <returns>true if the drop-down is open; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.IsReadOnly">
            <summary>
                Gets or sets a value indicating whether the contents of the <see cref="T:MahApps.Metro.Controls.TimePickerBase" /> are not editable.
            </summary>
            <returns>
                true if the <see cref="T:MahApps.Metro.Controls.TimePickerBase" /> is read-only; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.PickerVisibility">
            <summary>
                Gets or sets a value indicating the visibility of the selectable date-time-parts in the user interface (UI).
            </summary>
            <returns>
                visibility definition of the selectable date-time-parts. The default is <see cref="F:MahApps.Metro.Controls.TimePartVisibility.All" />.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.SelectedTime">
            <summary>
                Gets or sets the currently selected time.
            </summary>
            <returns>
                The time currently selected. The default is null.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.SelectedTimeFormat">
            <summary>
            Gets or sets the format that is used to display the selected time.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.SourceHours">
            <summary>
                Gets or sets a collection used to generate the content for selecting the hours.
            </summary>
            <returns>
                A collection that is used to generate the content for selecting the hours. The default is a list of interger from 0
                to 23 if <see cref="P:MahApps.Metro.Controls.TimePickerBase.IsMilitaryTime" /> is false or a list of interger from
                1 to 12 otherwise..
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.SourceMinutes">
            <summary>
                Gets or sets a collection used to generate the content for selecting the minutes.
            </summary>
            <returns>
                A collection that is used to generate the content for selecting the minutes. The default is a list of int from
                0 to 59.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.SourceSeconds">
            <summary>
                Gets or sets a collection used to generate the content for selecting the seconds.
            </summary>
            <returns>
                A collection that is used to generate the content for selecting the minutes. The default is a list of int from
                0 to 59.
            </returns>
        </member>
        <member name="P:MahApps.Metro.Controls.TimePickerBase.IsMilitaryTime">
            <summary>
                Gets a value indicating whether the <see cref="P:System.Globalization.DateTimeFormatInfo.AMDesignator" /> that is specified by the
                <see cref="T:System.Globalization.CultureInfo" />
                set by the <see cref="P:MahApps.Metro.Controls.TimePickerBase.Culture" /> (<see cref="P:System.Windows.FrameworkElement.Language" /> if null) has not a value.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TimePickerBase.OnApplyTemplate">
            <summary>
                When overridden in a derived class, is invoked whenever application code or internal processes call
                <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TimePickerBase.GetAmPmOffset(System.Int32)">
            <summary>
                Gets the offset from the selected <paramref name="currentHour" /> to use it in <see cref="T:System.TimeSpan" /> as hour
                parameter.
            </summary>
            <param name="currentHour">The current hour.</param>
            <returns>
                An integer representing the offset to add to the hour that is selected in the hour-picker for setting the correct
                <see cref="P:System.DateTime.TimeOfDay" />. The offset is determined as follows:
                <list type="table">
                    <listheader>
                        <term>Condition</term><description>Offset</description>
                    </listheader>
                    <item>
                        <term><see cref="P:MahApps.Metro.Controls.TimePickerBase.IsMilitaryTime" /> is false</term><description>0</description>
                    </item>
                    <item>
                        <term>Selected hour is between 1 AM and 11 AM</term><description>0</description>
                    </item>
                    <item>
                        <term>Selected hour is 12 AM</term><description>-12h</description>
                    </item>
                    <item>
                        <term>Selected hour is between 12 PM and 11 PM</term><description>+12h</description>
                    </item>
                </list>
            </returns>
        </member>
        <member name="T:MahApps.Metro.Controls.ToggleSwitch">
            <summary>
            A control that allows the user to toggle between two states: One represents true; The other represents false.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.ToggleSwitch.ContentPaddingProperty">
            <summary>
            Identifies the <see cref="P:MahApps.Metro.Controls.ToggleSwitch.ContentPadding" /> dependency property.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.HeaderFontFamily">
            <summary>
            Gets/sets the font family of the header.
            </summary> 
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.OnLabel">
            <summary>
            Gets/sets the text to display when the control is in it's On state.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.OffLabel">
            <summary>
            Gets/sets the text to display when the control is in it's Off state.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.SwitchForeground">
            <summary>
            Gets/sets the brush used for the switch's foreground.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.OnSwitchBrush">
            <summary>
            Gets/sets the brush used for the on-switch's foreground.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.OffSwitchBrush">
            <summary>
            Gets/sets the brush used for the off-switch's foreground.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.ThumbIndicatorBrush">
            <summary>
            Gets/sets the brush used for the thumb indicator.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.ThumbIndicatorDisabledBrush">
            <summary>
            Gets/sets the brush used for the thumb indicator.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.ThumbIndicatorWidth">
            <summary>
            Gets/sets the width of the thumb indicator.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.ContentDirection">
            <summary>
            Gets/sets the control's content flow direction.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.ContentPadding">
            <summary>
            Gets or sets the padding of the inner content.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.ToggleSwitchButtonStyle">
            <summary>
            Gets/sets the control's toggle switch button style.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.IsChecked">
            <summary>
            Gets/sets whether the control is Checked (On) or not (Off).
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.CheckChangedCommand">
            <summary>
            Gets/sets the command which will be executed if the IsChecked property was changed.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.CheckedCommand">
            <summary>
            Gets/sets the command which will be executed if the checked event of the control is fired.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.UnCheckedCommand">
            <summary>
            Gets/sets the command which will be executed if the checked event of the control is fired.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.CheckChangedCommandParameter">
            <summary>
            Gets/sets the command parameter which will be passed by the CheckChangedCommand.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.CheckedCommandParameter">
            <summary>
            Gets/sets the command parameter which will be passed by the CheckedCommand.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitch.UnCheckedCommandParameter">
            <summary>
            Gets/sets the command parameter which will be passed by the UnCheckedCommand.
            </summary>
        </member>
        <member name="E:MahApps.Metro.Controls.ToggleSwitch.IsCheckedChanged">
            <summary>
            An event that is raised when the value of IsChecked changes.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.ToggleSwitchButton">
            <summary>
            A Button that allows the user to toggle between two states.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitchButton.SwitchForeground">
            <summary>
            Gets/sets the brush used for the control's foreground.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitchButton.OnSwitchBrush">
            <summary>
            Gets/sets the brush used for the on-switch's foreground.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitchButton.OffSwitchBrush">
            <summary>
            Gets/sets the brush used for the off-switch's foreground.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitchButton.ThumbIndicatorBrush">
            <summary>
            Gets/sets the brush used for the thumb indicator.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitchButton.ThumbIndicatorDisabledBrush">
            <summary>
            Gets/sets the brush used for the thumb indicator.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.ToggleSwitchButton.ThumbIndicatorWidth">
            <summary>
            Gets/sets the width of the thumb indicator.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.TransitionType">
            <summary>
            enumeration for the different transition types
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.Default">
            <summary>
            Use the VisualState DefaultTransition
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.Normal">
            <summary>
            Use the VisualState Normal
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.Up">
            <summary>
            Use the VisualState UpTransition
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.Down">
            <summary>
            Use the VisualState DownTransition
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.Right">
            <summary>
            Use the VisualState RightTransition
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.RightReplace">
            <summary>
            Use the VisualState RightReplaceTransition
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.Left">
            <summary>
            Use the VisualState LeftTransition
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.LeftReplace">
            <summary>
            Use the VisualState LeftReplaceTransition
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.TransitionType.Custom">
            <summary>
            Use a custom VisualState, the name must be set using CustomVisualStatesName property
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.TransitioningContentControl">
            <summary>
            A ContentControl that animates content as it loads and unloads.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.TransitioningContentControl.CustomVisualStatesName">
            <summary>
            Gets or sets the name of the custom transition visual state.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.TransitioningContentControl.IsTransitioning">
            <summary>
            Gets/sets if the content is transitioning.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TransitioningContentControl.ReloadTransition">
            <summary>
            Reload the current transition if the content is the same.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.TreeHelper">
            <summary>
            Helper methods for UI-related tasks.
            This class was obtained from Philip Sumi (a fellow WPF Disciples blog)
            http://www.hardcodet.net/uploads/2009/06/UIHelper.cs
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.TreeHelper.TryFindParent``1(System.Windows.DependencyObject)">
            <summary>
            Finds a parent of a given item on the visual tree.
            </summary>
            <typeparam name="T">The type of the queried item.</typeparam>
            <param name="child">A direct or indirect child of the
            queried item.</param>
            <returns>The first parent item that matches the submitted
            type parameter. If not matching item can be found, a null
            reference is being returned.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.TreeHelper.GetAncestors(System.Windows.DependencyObject)">
            <summary>
            Finds all Ancestors of a given item on the visual tree.
            </summary>
            <param name="child">A node in a visual tree</param>
            <returns>All ancestors in visual tree of <paramref name="child"/> element</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.TreeHelper.FindChild``1(System.Windows.DependencyObject,System.String)">
            <summary>
            Finds a Child of a given item in the visual tree. 
            </summary>
            <param name="parent">A direct parent of the queried item.</param>
            <typeparam name="T">The type of the queried item.</typeparam>
            <param name="childName">x:Name or Name of child. </param>
            <returns>The first parent item that matches the submitted type parameter. 
            If not matching item can be found, 
            a null parent is being returned.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.TreeHelper.GetParentObject(System.Windows.DependencyObject)">
            <summary>
            This method is an alternative to WPF's
            <see cref="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)"/> method, which also
            supports content elements. Keep in mind that for content element,
            this method falls back to the logical tree of the element!
            </summary>
            <param name="child">The item to be processed.</param>
            <returns>The submitted item's parent, if available. Otherwise
            null.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.TreeHelper.FindChildren``1(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Analyzes both visual and logical tree in order to find all elements of a given
            type that are descendants of the <paramref name="source"/> item.
            </summary>
            <typeparam name="T">The type of the queried items.</typeparam>
            <param name="source">The root element that marks the source of the search. If the
            source is already of the requested type, it will not be included in the result.</param>
            <param name="forceUsingTheVisualTreeHelper">Sometimes it's better to search in the VisualTree (e.g. in tests)</param>
            <returns>All descendants of <paramref name="source"/> that match the requested type.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.TreeHelper.GetChildObjects(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            This method is an alternative to WPF's
            <see cref="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)"/> method, which also
            supports content elements. Keep in mind that for content elements,
            this method falls back to the logical tree of the element.
            </summary>
            <param name="parent">The item to be processed.</param>
            <param name="forceUsingTheVisualTreeHelper">Sometimes it's better to search in the VisualTree (e.g. in tests)</param>
            <returns>The submitted item's child elements, if available.</returns>
        </member>
        <member name="M:MahApps.Metro.Controls.TreeHelper.TryFindFromPoint``1(System.Windows.UIElement,System.Windows.Point)">
            <summary>
            Tries to locate a given item within the visual tree,
            starting with the dependency object at a given position. 
            </summary>
            <typeparam name="T">The type of the element to be found
            on the visual tree of the element at the given location.</typeparam>
            <param name="reference">The main element which is used to perform
            hit testing.</param>
            <param name="point">The position to be evaluated on the origin.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.WinApiHelper.GetRelativeMousePosition(System.IntPtr)">
            <summary>
            Gets the relative mouse position to the given handle in client coordinates.
            </summary>
            <param name="hWnd">The handle for this method.</param>
        </member>
        <member name="M:MahApps.Metro.Controls.WinApiHelper.TryGetRelativeMousePosition(System.IntPtr,System.Windows.Point@)">
            <summary>
            Try to get the relative mouse position to the given handle in client coordinates.
            </summary>
            <param name="hWnd">The handle for this method.</param>
            <param name="point">The relative mouse position to the given handle.</param>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.LightMinButtonStyle">
            <summary>
            Gets or sets the value indicating current light style for the minimize button.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.LightMaxButtonStyle">
            <summary>
            Gets or sets the value indicating current light style for the maximize button.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.LightCloseButtonStyle">
            <summary>
            Gets or sets the value indicating current light style for the close button.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.DarkMinButtonStyle">
            <summary>
            Gets or sets the value indicating current dark style for the minimize button.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.DarkMaxButtonStyle">
            <summary>
            Gets or sets the value indicating current dark style for the maximize button.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.DarkCloseButtonStyle">
            <summary>
            Gets or sets the value indicating current dark style for the close button.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.Theme">
            <summary>
            Gets or sets the value indicating current theme.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.Minimize">
            <summary>
            Gets or sets the minimize button tooltip.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.Maximize">
            <summary>
            Gets or sets the maximize button tooltip.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.Close">
            <summary>
            Gets or sets the close button tooltip.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowButtonCommands.Restore">
            <summary>
            Gets or sets the restore button tooltip.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowCommands.Theme">
            <summary>
            Gets or sets the value indicating current theme.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowCommands.LightTemplate">
            <summary>
            Gets or sets the value indicating light theme template.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowCommands.DarkTemplate">
            <summary>
            Gets or sets the value indicating light theme template.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowCommands.ShowSeparators">
            <summary>
            Gets or sets the value indicating whether to show the separators.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowCommands.ShowLastSeparator">
            <summary>
            Gets or sets the value indicating whether to show the last separator.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowCommands.SeparatorHeight">
            <summary>
            Gets or sets the value indicating separator height.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowCommandsItem.IsSeparatorVisible">
            <summary>
            Gets or sets the value indicating whether to show the separator.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.WindowCommandsOverlayBehavior.Never">
            <summary>
            Doesn't overlay flyouts nor a hidden TitleBar.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.WindowCommandsOverlayBehavior.Flyouts">
            <summary>
            Overlays opened <see cref="T:MahApps.Metro.Controls.Flyout"/> controls.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Controls.WindowCommandsOverlayBehavior.HiddenTitleBar">
            <summary>
            Overlays a hidden TitleBar.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.IWindowPlacementSettings.Reload">
            <summary>
            Refreshes the application settings property values from persistent storage.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.IWindowPlacementSettings.UpgradeSettings">
            <summary>
            Upgrades the application settings on loading.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.IWindowPlacementSettings.Upgrade">
            <summary>
            Updates application settings to reflect a more recent installation of the application.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Controls.IWindowPlacementSettings.Save">
            <summary>
            Stores the current values of the settings properties.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Controls.WindowApplicationSettings">
            <summary>
            this settings class is the default way to save the placement of the window
            </summary>
        </member>
        <member name="P:MahApps.Metro.Controls.WindowApplicationSettings.UpgradeSettings">
            <summary>
            Upgrades the application settings on loading.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Converters.BackgroundToForegroundConverter.IdealTextColor(System.Windows.Media.Color)">
            <summary>
            Determining Ideal Text Color Based on Specified Background Color
            http://www.codeproject.com/KB/GDI-plus/IdealTextColor.aspx
            </summary>
            <param name = "bg">The bg.</param>
            <returns></returns>
        </member>
        <member name="T:MahApps.Metro.Converters.ClockDegreeConverter">
            <summary>
            Converts a double representing either hour/minute/second to the corresponding angle.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Converters.IsNullConverter">
            <summary>
            Converts the value from true to false and false to true.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Converters.MathOperation">
            <summary>
            The math operations which can be used at the <see cref="T:MahApps.Metro.Converters.MathConverter"/>
            </summary>
        </member>
        <member name="T:MahApps.Metro.Converters.MathConverter">
            <summary>
            MathConverter provides a value converter which can be used for math operations.
            It can be used for normal binding or multi binding as well.
            If it is used for normal binding the given parameter will be used as operands with the selected operation.
            If it is used for multi binding then the first and second binding will be used as operands with the selected operation.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Converters.MathAddConverter">
            <summary>
            MathAddConverter provides a multi value converter as a MarkupExtension which can be used for math operations.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Converters.MathSubtractConverter">
            <summary>
            MathSubtractConverter provides a multi value converter as a MarkupExtension which can be used for math operations.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Converters.MathMultiplyConverter">
            <summary>
            MathMultiplyConverter provides a multi value converter as a MarkupExtension which can be used for math operations.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Converters.MathDivideConverter">
            <summary>
            MathDivideConverter provides a multi value converter as a MarkupExtension which can be used for math operations.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="T:MahApps.Metro.Converters.StringToVisibilityConverter">
            <summary>
                Converts a String into a Visibility enumeration (and back)
                The FalseEquivalent can be declared with the "FalseEquivalent" property
            </summary>
        </member>
        <member name="M:MahApps.Metro.Converters.StringToVisibilityConverter.#ctor">
            <summary>
                Initialize the properties with standard values
            </summary>
        </member>
        <member name="P:MahApps.Metro.Converters.StringToVisibilityConverter.FalseEquivalent">
            <summary>
                FalseEquivalent (default : Visibility.Collapsed => see Constructor)
            </summary>
        </member>
        <member name="P:MahApps.Metro.Converters.StringToVisibilityConverter.OppositeStringValue">
            <summary>
                Define whether the opposite boolean value is crucial (default : false)
            </summary>
        </member>
        <member name="T:MahApps.Metro.Converters.ThicknessBindingConverter">
            <summary>
            Converts a Thickness to a new Thickness. It's possible to ignore a side With the IgnoreThicknessSide property.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Converters.ThicknessSideType.None">
            <summary>
            Use all sides.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Converters.ThicknessSideType.Left">
            <summary>
            Ignore the left side.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Converters.ThicknessSideType.Top">
            <summary>
            Ignore the top side.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Converters.ThicknessSideType.Right">
            <summary>
            Ignore the right side.
            </summary>
        </member>
        <member name="F:MahApps.Metro.Converters.ThicknessSideType.Bottom">
            <summary>
            Ignore the bottom side.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Converters.TimeSpanToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts a value. </summary>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:MahApps.Metro.Converters.TimeSpanToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts a value. </summary>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:MahApps.Metro.Accent">
            <summary>
            An object that represents the foreground color for a <see cref="T:MahApps.Metro.AppTheme"/>.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Accent.Resources">
            <summary>
            The ResourceDictionary that represents this Accent.
            </summary>
        </member>
        <member name="P:MahApps.Metro.Accent.Name">
            <summary>
            Gets/sets the name of the Accent.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Accent.#ctor">
            <summary>
            Initializes a new instance of the Accent class.
            </summary>
        </member>
        <member name="M:MahApps.Metro.Accent.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the Accent class.
            </summary>
            <param name="name">The name of the new Accent.</param>
            <param name="resourceAddress">The URI of the accent ResourceDictionary.</param>
        </member>
        <member name="M:MahApps.Metro.Accent.#ctor(System.String,System.Windows.ResourceDictionary)">
            <summary>
            Initializes a new instance of the Accent class.
            </summary>
            <param name="name">The name of the new Accent.</param>
            <param name="resourceDictionary">The ResourceDictionary of the accent.</param>
        </member>
        <member name="T:MahApps.Metro.AppTheme">
            <summary>
            Represents the background theme of the application.
            </summary>
        </member>
        <member name="P:MahApps.Metro.AppTheme.Resources">
            <summary>
            The ResourceDictionary that represents this application theme.
            </summary>
        </member>
        <member name="P:MahApps.Metro.AppTheme.Name">
            <summary>
            Gets the name of the application theme.
            </summary>
        </member>
        <member name="M:MahApps.Metro.AppTheme.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the AppTheme class.
            </summary>
            <param name="name">The name of the new AppTheme.</param>
            <param name="resourceAddress">The URI of the AppTheme ResourceDictionary.</param>
        </member>
        <member name="M:MahApps.Metro.AppTheme.#ctor(System.String,System.Windows.ResourceDictionary)">
            <summary>
            Initializes a new instance of the AppTheme class.
            </summary>
            <param name="name">The name of the new AppTheme.</param>
            <param name="resourceDictionary">The ResourceDictionary of the accent.</param>
        </member>
        <member name="T:MahApps.Metro.ThemeManager">
            <summary>
            A class that allows for the detection and alteration of a theme and accent.
            </summary>
        </member>
        <member name="P:MahApps.Metro.ThemeManager.Accents">
            <summary>
            Gets a list of all of default accents.
            </summary>
        </member>
        <member name="P:MahApps.Metro.ThemeManager.AppThemes">
            <summary>
            Gets a list of all default themes.
            </summary>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.AddAccent(System.String,System.Uri)">
            <summary>
            Adds an accent with the given name and uniform resource identfier.
            </summary>
            <param name="name">The name of the new Accent.</param>
            <param name="resourceAddress">The URI of the accent ResourceDictionary.</param>
            <returns>true if the accent does not exists and can be added.</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.AddAccent(System.String,System.Windows.ResourceDictionary)">
            <summary>
            Adds an accent with the given name and resource dictionary.
            </summary>
            <param name="name">The name of the new Accent.</param>
            <param name="resourceDictionary">The ResourceDictionary of the accent.</param>
            <returns>true if the accent does not exists and can be added.</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.AddAppTheme(System.String,System.Uri)">
            <summary>
            Adds an app theme with the given name.
            </summary>
            <param name="name">The name of the new AppTheme.</param>
            <param name="resourceAddress">The URI of the AppTheme ResourceDictionary.</param>
            <returns>true if the app theme does not exists and can be added.</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.AddAppTheme(System.String,System.Windows.ResourceDictionary)">
            <summary>
            Adds an app theme with the given name.
            </summary>
            <param name="name">The name of the new AppTheme.</param>
            <param name="resourceDictionary">The ResourceDictionary of the accent.</param>
            <returns>true if the app theme does not exists and can be added.</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.GetAppTheme(System.Windows.ResourceDictionary)">
            <summary>
            Gets app theme with the given resource dictionary.
            </summary>
            <param name="resources"><see cref="T:System.Windows.ResourceDictionary"/> from which the theme should be retrieved.</param>
            <returns>AppTheme</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.GetAppTheme(System.String)">
            <summary>
            Gets app theme with the given name and theme type (light or dark).
            </summary>
            <returns>AppTheme</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.GetInverseAppTheme(MahApps.Metro.AppTheme)">
            <summary>
            Gets the inverse <see cref="T:MahApps.Metro.AppTheme" /> of the given <see cref="T:MahApps.Metro.AppTheme"/>.
            This method relies on the "Dark" or "Light" affix to be present.
            </summary>
            <param name="appTheme">The app theme.</param>
            <returns>The inverse <see cref="T:MahApps.Metro.AppTheme"/> or <c>null</c> if it couldn't be found.</returns>
            <remarks>
            Returns BaseLight, if BaseDark is given or vice versa.
            Custom Themes must end with "Dark" or "Light" for this to work, for example "CustomDark" and "CustomLight".
            </remarks>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.GetAccent(System.String)">
            <summary>
            Gets the <see cref="T:MahApps.Metro.Accent"/> with the given name.
            </summary>
            <returns>The <see cref="T:MahApps.Metro.Accent"/> or <c>null</c>, if the app theme wasn't found</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.GetAccent(System.Windows.ResourceDictionary)">
            <summary>
            Gets the <see cref="T:MahApps.Metro.Accent"/> with the given resource dictionary.
            </summary>
            <param name="resources"><see cref="T:System.Windows.ResourceDictionary"/> from which the accent should be retrieved.</param>
            <returns>The <see cref="T:MahApps.Metro.Accent"/> or <c>null</c>, if the accent wasn't found.</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.IsAccentDictionary(System.Windows.ResourceDictionary)">
            <summary>
            Determines whether the specified resource dictionary represents an <see cref="T:MahApps.Metro.Accent"/>.
            <para />
            This might include runtime accents which do not have a resource uri.
            </summary>
            <param name="resources">The resources.</param>
            <returns><c>true</c> if the resource dictionary is an <see cref="T:MahApps.Metro.Accent"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">resources</exception>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.GetResourceFromAppStyle(System.Windows.Window,System.String)">
            <summary>
            Gets a resource from the detected AppStyle.
            </summary>
            <param name="window">The window to check. If this is null, the Application's sources will be checked.</param>
            <param name="key">The key to check against.</param>
            <returns>The resource object or null, if the resource wasn't found.</returns>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.ChangeAppTheme(System.Windows.Application,System.String)">
            <summary>
            Change the theme for the whole application.
            </summary>
            <param name="app"></param>
            <param name="themeName"></param>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.ChangeAppTheme(System.Windows.Window,System.String)">
            <summary>
            Change theme for the given window.
            </summary>
            <param name="window"></param>
            <param name="themeName"></param>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.ChangeAppStyle(System.Windows.Application,MahApps.Metro.Accent,MahApps.Metro.AppTheme)">
            <summary>
            Change accent and theme for the whole application.
            </summary>
            <param name="app">The instance of Application to change.</param>
            <param name="newAccent">The accent to apply.</param>
            <param name="newTheme">The theme to apply.</param>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.ChangeAppStyle(System.Windows.Window,MahApps.Metro.Accent,MahApps.Metro.AppTheme)">
            <summary>
            Change accent and theme for the given window.
            </summary>
            <param name="window">The Window to change.</param>
            <param name="newAccent">The accent to apply.</param>
            <param name="newTheme">The theme to apply.</param>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.ChangeAppStyle(System.Windows.ResourceDictionary,MahApps.Metro.Accent,MahApps.Metro.AppTheme)">
            <summary>
            Changes the accent and theme of a ResourceDictionary directly.
            </summary>
            <param name="resources">The ResourceDictionary to modify.</param>
            <param name="newAccent">The accent to apply to the ResourceDictionary.</param>
            <param name="newTheme">The theme to apply to the ResourceDictionary.</param>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.CopyResource(System.Windows.ResourceDictionary,System.Windows.ResourceDictionary)">
            <summary>
            Copies all resource keys from one resource to another.
            </summary>
            <param name="fromRD">The source resource dictionary.</param>
            <param name="toRD">The destination resource dictionary.</param>
            <exception cref="T:System.ArgumentNullException">
            fromRD
            or
            toRD
            </exception>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.DetectAppStyle">
            <summary>
            Scans the window resources and returns it's accent and theme.
            </summary>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.DetectAppStyle(System.Windows.Window)">
            <summary>
            Scans the window resources and returns it's accent and theme.
            </summary>
            <param name="window">The Window to scan.</param>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.DetectAppStyle(System.Windows.Application)">
            <summary>
            Scans the application resources and returns it's accent and theme.
            </summary>
            <param name="app">The Application instance to scan.</param>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.DetectAppStyle(System.Windows.ResourceDictionary)">
            <summary>
            Scans a resources and returns it's accent and theme.
            </summary>
            <param name="resources">The ResourceDictionary to check.</param>
        </member>
        <member name="E:MahApps.Metro.ThemeManager.IsThemeChanged">
            <summary>
            This event fires if accent color and theme was changed
            this should be using the weak event pattern, but for now it's enough
            </summary>
        </member>
        <member name="M:MahApps.Metro.ThemeManager.OnThemeChanged(MahApps.Metro.Accent,MahApps.Metro.AppTheme)">
            <summary>
            Invalidates global colors and resources.
            Sometimes the ContextMenu is not changing the colors, so this will fix it.
            </summary>
        </member>
        <member name="T:MahApps.Metro.OnThemeChangedEventArgs">
            <summary>
            Class which is used as argument for an event to signal theme changes.
            </summary>
        </member>
        <member name="M:MahApps.Metro.OnThemeChangedEventArgs.#ctor(MahApps.Metro.AppTheme,MahApps.Metro.Accent)">
            <summary>
            Creates a new instance of this class.
            </summary>
        </member>
        <member name="P:MahApps.Metro.OnThemeChangedEventArgs.AppTheme">
            <summary>
            The new theme.
            </summary>
        </member>
        <member name="P:MahApps.Metro.OnThemeChangedEventArgs.Accent">
            <summary>
            The new accent
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
